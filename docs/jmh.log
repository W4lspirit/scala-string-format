# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ConstStringBenchmark.baseline

# Run progress: 0,00% complete, ETA 01:38:00
# Fork: 1 of 2
# Warmup Iteration   1: 2,583 ns/op
# Warmup Iteration   2: 2,664 ns/op
# Warmup Iteration   3: 2,202 ns/op
Iteration   1: 2,192 ns/op
Iteration   2: 2,179 ns/op
Iteration   3: 2,295 ns/op
Iteration   4: 2,230 ns/op
Iteration   5: 2,209 ns/op
Iteration   6: 2,205 ns/op
Iteration   7: 2,198 ns/op

# Run progress: 0,51% complete, ETA 01:38:08
# Fork: 2 of 2
# Warmup Iteration   1: 2,497 ns/op
# Warmup Iteration   2: 2,654 ns/op
# Warmup Iteration   3: 2,177 ns/op
Iteration   1: 2,170 ns/op
Iteration   2: 2,168 ns/op
Iteration   3: 2,202 ns/op
Iteration   4: 2,169 ns/op
Iteration   5: 2,199 ns/op
Iteration   6: 2,168 ns/op
Iteration   7: 2,165 ns/op


Result "com.komanov.stringformat.jmh.ConstStringBenchmark.baseline":
  2,196 ±(99.9%) 0,039 ns/op [Average]
  (min, avg, max) = (2,165, 2,196, 2,295), stdev = 0,034
  CI (99.9%): [2,157, 2,235] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ConstStringBenchmark.sInterpolator

# Run progress: 1,02% complete, ETA 01:37:34
# Fork: 1 of 2
# Warmup Iteration   1: 2,472 ns/op
# Warmup Iteration   2: 2,552 ns/op
# Warmup Iteration   3: 2,170 ns/op
Iteration   1: 2,169 ns/op
Iteration   2: 2,162 ns/op
Iteration   3: 2,154 ns/op
Iteration   4: 2,162 ns/op
Iteration   5: 2,158 ns/op
Iteration   6: 2,158 ns/op
Iteration   7: 2,153 ns/op

# Run progress: 1,53% complete, ETA 01:37:03
# Fork: 2 of 2
# Warmup Iteration   1: 5,176 ns/op
# Warmup Iteration   2: 5,162 ns/op
# Warmup Iteration   3: 4,423 ns/op
Iteration   1: 4,416 ns/op
Iteration   2: 4,424 ns/op
Iteration   3: 4,418 ns/op
Iteration   4: 4,426 ns/op
Iteration   5: 4,422 ns/op
Iteration   6: 4,433 ns/op
Iteration   7: 4,427 ns/op


Result "com.komanov.stringformat.jmh.ConstStringBenchmark.sInterpolator":
  3,292 ±(99.9%) 1,325 ns/op [Average]
  (min, avg, max) = (2,153, 3,292, 4,433), stdev = 1,175
  CI (99.9%): [1,966, 4,617] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ConstStringBenchmark.sfiInterpolator

# Run progress: 2,04% complete, ETA 01:36:32
# Fork: 1 of 2
# Warmup Iteration   1: 2,475 ns/op
# Warmup Iteration   2: 2,542 ns/op
# Warmup Iteration   3: 2,167 ns/op
Iteration   1: 2,155 ns/op
Iteration   2: 2,158 ns/op
Iteration   3: 2,160 ns/op
Iteration   4: 2,159 ns/op
Iteration   5: 2,154 ns/op
Iteration   6: 2,157 ns/op
Iteration   7: 2,160 ns/op

# Run progress: 2,55% complete, ETA 01:36:01
# Fork: 2 of 2
# Warmup Iteration   1: 2,467 ns/op
# Warmup Iteration   2: 2,562 ns/op
# Warmup Iteration   3: 2,156 ns/op
Iteration   1: 2,152 ns/op
Iteration   2: 2,162 ns/op
Iteration   3: 2,151 ns/op
Iteration   4: 2,154 ns/op
Iteration   5: 2,152 ns/op
Iteration   6: 2,155 ns/op
Iteration   7: 2,151 ns/op


Result "com.komanov.stringformat.jmh.ConstStringBenchmark.sfiInterpolator":
  2,156 ±(99.9%) 0,004 ns/op [Average]
  (min, avg, max) = (2,151, 2,156, 2,162), stdev = 0,004
  CI (99.9%): [2,152, 2,160] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.EmptyStringBenchmark.baseline

# Run progress: 3,06% complete, ETA 01:35:31
# Fork: 1 of 2
# Warmup Iteration   1: 2,468 ns/op
# Warmup Iteration   2: 2,547 ns/op
# Warmup Iteration   3: 2,155 ns/op
Iteration   1: 2,154 ns/op
Iteration   2: 2,155 ns/op
Iteration   3: 2,152 ns/op
Iteration   4: 2,154 ns/op
Iteration   5: 2,152 ns/op
Iteration   6: 2,159 ns/op
Iteration   7: 2,158 ns/op

# Run progress: 3,57% complete, ETA 01:35:00
# Fork: 2 of 2
# Warmup Iteration   1: 2,481 ns/op
# Warmup Iteration   2: 2,560 ns/op
# Warmup Iteration   3: 2,156 ns/op
Iteration   1: 2,151 ns/op
Iteration   2: 2,154 ns/op
Iteration   3: 2,151 ns/op
Iteration   4: 2,154 ns/op
Iteration   5: 2,151 ns/op
Iteration   6: 2,155 ns/op
Iteration   7: 2,151 ns/op


Result "com.komanov.stringformat.jmh.EmptyStringBenchmark.baseline":
  2,154 ±(99.9%) 0,003 ns/op [Average]
  (min, avg, max) = (2,151, 2,154, 2,159), stdev = 0,002
  CI (99.9%): [2,151, 2,156] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.EmptyStringBenchmark.sInterpolator

# Run progress: 4,08% complete, ETA 01:34:30
# Fork: 1 of 2
# Warmup Iteration   1: 2,467 ns/op
# Warmup Iteration   2: 2,552 ns/op
# Warmup Iteration   3: 2,158 ns/op
Iteration   1: 2,156 ns/op
Iteration   2: 2,158 ns/op
Iteration   3: 2,168 ns/op
Iteration   4: 2,157 ns/op
Iteration   5: 2,152 ns/op
Iteration   6: 2,157 ns/op
Iteration   7: 2,155 ns/op

# Run progress: 4,59% complete, ETA 01:34:00
# Fork: 2 of 2
# Warmup Iteration   1: 2,468 ns/op
# Warmup Iteration   2: 2,550 ns/op
# Warmup Iteration   3: 2,155 ns/op
Iteration   1: 2,152 ns/op
Iteration   2: 2,157 ns/op
Iteration   3: 2,152 ns/op
Iteration   4: 2,154 ns/op
Iteration   5: 2,152 ns/op
Iteration   6: 2,155 ns/op
Iteration   7: 2,156 ns/op


Result "com.komanov.stringformat.jmh.EmptyStringBenchmark.sInterpolator":
  2,156 ±(99.9%) 0,005 ns/op [Average]
  (min, avg, max) = (2,152, 2,156, 2,168), stdev = 0,004
  CI (99.9%): [2,151, 2,161] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.EmptyStringBenchmark.sfiInterpolator

# Run progress: 5,10% complete, ETA 01:33:30
# Fork: 1 of 2
# Warmup Iteration   1: 2,465 ns/op
# Warmup Iteration   2: 2,561 ns/op
# Warmup Iteration   3: 2,153 ns/op
Iteration   1: 2,151 ns/op
Iteration   2: 2,153 ns/op
Iteration   3: 2,153 ns/op
Iteration   4: 2,157 ns/op
Iteration   5: 2,153 ns/op
Iteration   6: 2,153 ns/op
Iteration   7: 2,152 ns/op

# Run progress: 5,61% complete, ETA 01:32:59
# Fork: 2 of 2
# Warmup Iteration   1: 2,466 ns/op
# Warmup Iteration   2: 2,553 ns/op
# Warmup Iteration   3: 2,157 ns/op
Iteration   1: 2,153 ns/op
Iteration   2: 2,155 ns/op
Iteration   3: 2,152 ns/op
Iteration   4: 2,153 ns/op
Iteration   5: 2,151 ns/op
Iteration   6: 2,153 ns/op
Iteration   7: 2,151 ns/op


Result "com.komanov.stringformat.jmh.EmptyStringBenchmark.sfiInterpolator":
  2,153 ±(99.9%) 0,002 ns/op [Average]
  (min, avg, max) = (2,151, 2,153, 2,157), stdev = 0,001
  CI (99.9%): [2,151, 2,155] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = Tiny)

# Run progress: 6,12% complete, ETA 01:32:29
# Fork: 1 of 2
# Warmup Iteration   1: 33,684 ns/op
# Warmup Iteration   2: 32,500 ns/op
# Warmup Iteration   3: 32,121 ns/op
Iteration   1: 32,101 ns/op
Iteration   2: 32,056 ns/op
Iteration   3: 32,184 ns/op
Iteration   4: 32,127 ns/op
Iteration   5: 32,139 ns/op
Iteration   6: 32,213 ns/op
Iteration   7: 31,986 ns/op

# Run progress: 6,63% complete, ETA 01:31:59
# Fork: 2 of 2
# Warmup Iteration   1: 35,002 ns/op
# Warmup Iteration   2: 33,549 ns/op
# Warmup Iteration   3: 32,617 ns/op
Iteration   1: 32,930 ns/op
Iteration   2: 32,649 ns/op
Iteration   3: 32,643 ns/op
Iteration   4: 32,514 ns/op
Iteration   5: 32,642 ns/op
Iteration   6: 32,601 ns/op
Iteration   7: 32,541 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  32,380 ±(99.9%) 0,333 ns/op [Average]
  (min, avg, max) = (31,986, 32,380, 32,930), stdev = 0,295
  CI (99.9%): [32,048, 32,713] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = VeryShort)

# Run progress: 7,14% complete, ETA 01:31:29
# Fork: 1 of 2
# Warmup Iteration   1: 32,418 ns/op
# Warmup Iteration   2: 31,544 ns/op
# Warmup Iteration   3: 31,231 ns/op
Iteration   1: 31,530 ns/op
Iteration   2: 31,268 ns/op
Iteration   3: 31,246 ns/op
Iteration   4: 31,149 ns/op
Iteration   5: 31,246 ns/op
Iteration   6: 31,353 ns/op
Iteration   7: 31,387 ns/op

# Run progress: 7,65% complete, ETA 01:30:59
# Fork: 2 of 2
# Warmup Iteration   1: 33,353 ns/op
# Warmup Iteration   2: 31,273 ns/op
# Warmup Iteration   3: 30,633 ns/op
Iteration   1: 30,653 ns/op
Iteration   2: 30,703 ns/op
Iteration   3: 30,666 ns/op
Iteration   4: 30,553 ns/op
Iteration   5: 30,693 ns/op
Iteration   6: 30,600 ns/op
Iteration   7: 30,631 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  30,977 ±(99.9%) 0,405 ns/op [Average]
  (min, avg, max) = (30,553, 30,977, 31,530), stdev = 0,359
  CI (99.9%): [30,572, 31,382] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = Short)

# Run progress: 8,16% complete, ETA 01:30:28
# Fork: 1 of 2
# Warmup Iteration   1: 48,490 ns/op
# Warmup Iteration   2: 38,306 ns/op
# Warmup Iteration   3: 37,122 ns/op
Iteration   1: 37,262 ns/op
Iteration   2: 37,222 ns/op
Iteration   3: 37,511 ns/op
Iteration   4: 37,359 ns/op
Iteration   5: 37,338 ns/op
Iteration   6: 37,167 ns/op
Iteration   7: 37,163 ns/op

# Run progress: 8,67% complete, ETA 01:29:58
# Fork: 2 of 2
# Warmup Iteration   1: 48,282 ns/op
# Warmup Iteration   2: 39,274 ns/op
# Warmup Iteration   3: 38,212 ns/op
Iteration   1: 38,496 ns/op
Iteration   2: 38,470 ns/op
Iteration   3: 38,622 ns/op
Iteration   4: 38,422 ns/op
Iteration   5: 38,595 ns/op
Iteration   6: 38,242 ns/op
Iteration   7: 38,332 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  37,872 ±(99.9%) 0,697 ns/op [Average]
  (min, avg, max) = (37,163, 37,872, 38,622), stdev = 0,618
  CI (99.9%): [37,175, 38,568] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = Medium)

# Run progress: 9,18% complete, ETA 01:29:28
# Fork: 1 of 2
# Warmup Iteration   1: 56,569 ns/op
# Warmup Iteration   2: 54,195 ns/op
# Warmup Iteration   3: 53,673 ns/op
Iteration   1: 53,517 ns/op
Iteration   2: 53,298 ns/op
Iteration   3: 53,228 ns/op
Iteration   4: 53,369 ns/op
Iteration   5: 53,297 ns/op
Iteration   6: 53,243 ns/op
Iteration   7: 53,555 ns/op

# Run progress: 9,69% complete, ETA 01:28:58
# Fork: 2 of 2
# Warmup Iteration   1: 56,092 ns/op
# Warmup Iteration   2: 43,176 ns/op
# Warmup Iteration   3: 42,176 ns/op
Iteration   1: 42,059 ns/op
Iteration   2: 41,987 ns/op
Iteration   3: 42,077 ns/op
Iteration   4: 42,000 ns/op
Iteration   5: 42,041 ns/op
Iteration   6: 41,978 ns/op
Iteration   7: 41,954 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  47,686 ±(99.9%) 6,641 ns/op [Average]
  (min, avg, max) = (41,954, 47,686, 53,555), stdev = 5,887
  CI (99.9%): [41,045, 54,327] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = Long)

# Run progress: 10,20% complete, ETA 01:28:28
# Fork: 1 of 2
# Warmup Iteration   1: 59,230 ns/op
# Warmup Iteration   2: 43,090 ns/op
# Warmup Iteration   3: 42,687 ns/op
Iteration   1: 42,363 ns/op
Iteration   2: 42,402 ns/op
Iteration   3: 42,439 ns/op
Iteration   4: 42,500 ns/op
Iteration   5: 42,365 ns/op
Iteration   6: 42,515 ns/op
Iteration   7: 42,400 ns/op

# Run progress: 10,71% complete, ETA 01:27:57
# Fork: 2 of 2
# Warmup Iteration   1: 59,659 ns/op
# Warmup Iteration   2: 43,461 ns/op
# Warmup Iteration   3: 42,864 ns/op
Iteration   1: 42,817 ns/op
Iteration   2: 42,818 ns/op
Iteration   3: 43,059 ns/op
Iteration   4: 42,906 ns/op
Iteration   5: 42,746 ns/op
Iteration   6: 42,924 ns/op
Iteration   7: 42,729 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  42,642 ±(99.9%) 0,271 ns/op [Average]
  (min, avg, max) = (42,363, 42,642, 43,059), stdev = 0,240
  CI (99.9%): [42,371, 42,913] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = VeryLong)

# Run progress: 11,22% complete, ETA 01:27:27
# Fork: 1 of 2
# Warmup Iteration   1: 92,000 ns/op
# Warmup Iteration   2: 86,647 ns/op
# Warmup Iteration   3: 86,117 ns/op
Iteration   1: 86,024 ns/op
Iteration   2: 86,539 ns/op
Iteration   3: 85,891 ns/op
Iteration   4: 86,600 ns/op
Iteration   5: 86,321 ns/op
Iteration   6: 85,784 ns/op
Iteration   7: 86,007 ns/op

# Run progress: 11,73% complete, ETA 01:26:57
# Fork: 2 of 2
# Warmup Iteration   1: 96,294 ns/op
# Warmup Iteration   2: 91,467 ns/op
# Warmup Iteration   3: 90,768 ns/op
Iteration   1: 90,072 ns/op
Iteration   2: 90,390 ns/op
Iteration   3: 90,851 ns/op
Iteration   4: 90,966 ns/op
Iteration   5: 90,521 ns/op
Iteration   6: 92,444 ns/op
Iteration   7: 90,718 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  88,509 ±(99.9%) 2,815 ns/op [Average]
  (min, avg, max) = (85,784, 88,509, 92,444), stdev = 2,495
  CI (99.9%): [85,694, 91,324] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 12,24% complete, ETA 01:26:27
# Fork: 1 of 2
# Warmup Iteration   1: 91,309 ns/op
# Warmup Iteration   2: 88,004 ns/op
# Warmup Iteration   3: 87,250 ns/op
Iteration   1: 87,130 ns/op
Iteration   2: 86,356 ns/op
Iteration   3: 86,990 ns/op
Iteration   4: 87,941 ns/op
Iteration   5: 87,096 ns/op
Iteration   6: 87,496 ns/op
Iteration   7: 87,471 ns/op

# Run progress: 12,76% complete, ETA 01:25:57
# Fork: 2 of 2
# Warmup Iteration   1: 92,759 ns/op
# Warmup Iteration   2: 87,710 ns/op
# Warmup Iteration   3: 87,632 ns/op
Iteration   1: 88,116 ns/op
Iteration   2: 87,259 ns/op
Iteration   3: 86,437 ns/op
Iteration   4: 87,810 ns/op
Iteration   5: 87,726 ns/op
Iteration   6: 88,182 ns/op
Iteration   7: 87,335 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized1":
  87,382 ±(99.9%) 0,632 ns/op [Average]
  (min, avg, max) = (86,356, 87,382, 88,182), stdev = 0,560
  CI (99.9%): [86,750, 88,013] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = Tiny)

# Run progress: 13,27% complete, ETA 01:25:27
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
75,224 ns/op
# Warmup Iteration   2: 47,392 ns/op
# Warmup Iteration   3: 45,971 ns/op
Iteration   1: 45,786 ns/op
Iteration   2: 45,668 ns/op
Iteration   3: 45,923 ns/op
Iteration   4: 45,786 ns/op
Iteration   5: 45,802 ns/op
Iteration   6: 45,938 ns/op
Iteration   7: 46,214 ns/op

# Run progress: 13,78% complete, ETA 01:24:56
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
75,951 ns/op
# Warmup Iteration   2: 46,952 ns/op
# Warmup Iteration   3: 46,616 ns/op
Iteration   1: 46,622 ns/op
Iteration   2: 46,325 ns/op
Iteration   3: 46,432 ns/op
Iteration   4: 46,439 ns/op
Iteration   5: 46,310 ns/op
Iteration   6: 46,356 ns/op
Iteration   7: 46,647 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  46,160 ±(99.9%) 0,377 ns/op [Average]
  (min, avg, max) = (45,668, 46,160, 46,647), stdev = 0,334
  CI (99.9%): [45,784, 46,537] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = VeryShort)

# Run progress: 14,29% complete, ETA 01:24:26
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
82,768 ns/op
# Warmup Iteration   2: 60,844 ns/op
# Warmup Iteration   3: 60,201 ns/op
Iteration   1: 60,633 ns/op
Iteration   2: 60,488 ns/op
Iteration   3: 60,622 ns/op
Iteration   4: 60,425 ns/op
Iteration   5: 60,557 ns/op
Iteration   6: 60,478 ns/op
Iteration   7: 60,509 ns/op

# Run progress: 14,80% complete, ETA 01:23:56
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
63,201 ns/op
# Warmup Iteration   2: 62,217 ns/op
# Warmup Iteration   3: 61,167 ns/op
Iteration   1: 61,168 ns/op
Iteration   2: 61,080 ns/op
Iteration   3: 60,988 ns/op
Iteration   4: 61,061 ns/op
Iteration   5: 61,409 ns/op
Iteration   6: 61,034 ns/op
Iteration   7: 61,352 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  60,843 ±(99.9%) 0,392 ns/op [Average]
  (min, avg, max) = (60,425, 60,843, 61,409), stdev = 0,347
  CI (99.9%): [60,452, 61,235] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = Short)

# Run progress: 15,31% complete, ETA 01:23:26
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
91,744 ns/op
# Warmup Iteration   2: 74,942 ns/op
# Warmup Iteration   3: 75,238 ns/op
Iteration   1: 75,624 ns/op
Iteration   2: 75,598 ns/op
Iteration   3: 75,745 ns/op
Iteration   4: 75,037 ns/op
Iteration   5: 75,099 ns/op
Iteration   6: 74,681 ns/op
Iteration   7: 75,088 ns/op

# Run progress: 15,82% complete, ETA 01:22:56
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
84,374 ns/op
# Warmup Iteration   2: 65,732 ns/op
# Warmup Iteration   3: 64,415 ns/op
Iteration   1: 64,146 ns/op
Iteration   2: 64,027 ns/op
Iteration   3: 63,920 ns/op
Iteration   4: 63,961 ns/op
Iteration   5: 63,944 ns/op
Iteration   6: 64,086 ns/op
Iteration   7: 63,778 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  69,624 ±(99.9%) 6,614 ns/op [Average]
  (min, avg, max) = (63,778, 69,624, 75,745), stdev = 5,863
  CI (99.9%): [63,010, 76,238] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = Medium)

# Run progress: 16,33% complete, ETA 01:22:26
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
98,166 ns/op
# Warmup Iteration   2: 78,150 ns/op
# Warmup Iteration   3: 76,798 ns/op
Iteration   1: 76,614 ns/op
Iteration   2: 76,619 ns/op
Iteration   3: 76,717 ns/op
Iteration   4: 77,160 ns/op
Iteration   5: 77,099 ns/op
Iteration   6: 76,989 ns/op
Iteration   7: 76,842 ns/op

# Run progress: 16,84% complete, ETA 01:21:56
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
102,808 ns/op
# Warmup Iteration   2: 75,629 ns/op
# Warmup Iteration   3: 74,573 ns/op
Iteration   1: 74,622 ns/op
Iteration   2: 74,533 ns/op
Iteration   3: 74,537 ns/op
Iteration   4: 74,540 ns/op
Iteration   5: 75,243 ns/op
Iteration   6: 74,938 ns/op
Iteration   7: 75,141 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  75,828 ±(99.9%) 1,246 ns/op [Average]
  (min, avg, max) = (74,533, 75,828, 77,160), stdev = 1,105
  CI (99.9%): [74,582, 77,074] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = Long)

# Run progress: 17,35% complete, ETA 01:21:25
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
109,215 ns/op
# Warmup Iteration   2: 87,865 ns/op
# Warmup Iteration   3: 87,732 ns/op
Iteration   1: 88,209 ns/op
Iteration   2: 87,874 ns/op
Iteration   3: 88,450 ns/op
Iteration   4: 88,382 ns/op
Iteration   5: 87,961 ns/op
Iteration   6: 88,089 ns/op
Iteration   7: 88,273 ns/op

# Run progress: 17,86% complete, ETA 01:20:55
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
110,012 ns/op
# Warmup Iteration   2: 87,747 ns/op
# Warmup Iteration   3: 87,493 ns/op
Iteration   1: 86,846 ns/op
Iteration   2: 86,971 ns/op
Iteration   3: 87,517 ns/op
Iteration   4: 87,937 ns/op
Iteration   5: 87,271 ns/op
Iteration   6: 87,112 ns/op
Iteration   7: 86,851 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  87,696 ±(99.9%) 0,661 ns/op [Average]
  (min, avg, max) = (86,846, 87,696, 88,450), stdev = 0,586
  CI (99.9%): [87,035, 88,357] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = VeryLong)

# Run progress: 18,37% complete, ETA 01:20:25
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
213,627 ns/op
# Warmup Iteration   2: 201,284 ns/op
# Warmup Iteration   3: 199,413 ns/op
Iteration   1: 200,310 ns/op
Iteration   2: 201,679 ns/op
Iteration   3: 200,245 ns/op
Iteration   4: 200,325 ns/op
Iteration   5: 200,460 ns/op
Iteration   6: 201,968 ns/op
Iteration   7: 200,577 ns/op

# Run progress: 18,88% complete, ETA 01:19:55
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
215,757 ns/op
# Warmup Iteration   2: 202,097 ns/op
# Warmup Iteration   3: 200,146 ns/op
Iteration   1: 201,185 ns/op
Iteration   2: 201,575 ns/op
Iteration   3: 201,445 ns/op
Iteration   4: 201,075 ns/op
Iteration   5: 202,682 ns/op
Iteration   6: 202,607 ns/op
Iteration   7: 202,291 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  201,316 ±(99.9%) 0,970 ns/op [Average]
  (min, avg, max) = (200,245, 201,316, 202,682), stdev = 0,860
  CI (99.9%): [200,346, 202,286] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 19,39% complete, ETA 01:19:25
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
218,833 ns/op
# Warmup Iteration   2: 204,983 ns/op
# Warmup Iteration   3: 204,693 ns/op
Iteration   1: 204,284 ns/op
Iteration   2: 204,288 ns/op
Iteration   3: 203,400 ns/op
Iteration   4: 203,434 ns/op
Iteration   5: 204,958 ns/op
Iteration   6: 203,999 ns/op
Iteration   7: 204,058 ns/op

# Run progress: 19,90% complete, ETA 01:18:55
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
217,832 ns/op
# Warmup Iteration   2: 207,819 ns/op
# Warmup Iteration   3: 204,745 ns/op
Iteration   1: 206,067 ns/op
Iteration   2: 204,971 ns/op
Iteration   3: 203,379 ns/op
Iteration   4: 205,061 ns/op
Iteration   5: 204,152 ns/op
Iteration   6: 204,633 ns/op
Iteration   7: 207,099 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimized2":
  204,556 ±(99.9%) 1,179 ns/op [Average]
  (min, avg, max) = (203,379, 204,556, 207,099), stdev = 1,045
  CI (99.9%): [203,377, 205,735] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = Tiny)

# Run progress: 20,41% complete, ETA 01:18:24
# Fork: 1 of 2
# Warmup Iteration   1: 29,765 ns/op
# Warmup Iteration   2: 28,996 ns/op
# Warmup Iteration   3: 28,023 ns/op
Iteration   1: 28,217 ns/op
Iteration   2: 28,293 ns/op
Iteration   3: 28,160 ns/op
Iteration   4: 28,145 ns/op
Iteration   5: 28,182 ns/op
Iteration   6: 28,097 ns/op
Iteration   7: 28,202 ns/op

# Run progress: 20,92% complete, ETA 01:17:54
# Fork: 2 of 2
# Warmup Iteration   1: 29,131 ns/op
# Warmup Iteration   2: 28,351 ns/op
# Warmup Iteration   3: 28,180 ns/op
Iteration   1: 27,928 ns/op
Iteration   2: 27,938 ns/op
Iteration   3: 28,115 ns/op
Iteration   4: 28,023 ns/op
Iteration   5: 27,976 ns/op
Iteration   6: 28,147 ns/op
Iteration   7: 28,149 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  28,112 ±(99.9%) 0,123 ns/op [Average]
  (min, avg, max) = (27,928, 28,112, 28,293), stdev = 0,109
  CI (99.9%): [27,990, 28,235] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = VeryShort)

# Run progress: 21,43% complete, ETA 01:17:24
# Fork: 1 of 2
# Warmup Iteration   1: 28,715 ns/op
# Warmup Iteration   2: 28,778 ns/op
# Warmup Iteration   3: 27,765 ns/op
Iteration   1: 27,939 ns/op
Iteration   2: 27,766 ns/op
Iteration   3: 27,650 ns/op
Iteration   4: 27,696 ns/op
Iteration   5: 27,772 ns/op
Iteration   6: 28,911 ns/op
Iteration   7: 30,472 ns/op

# Run progress: 21,94% complete, ETA 01:16:54
# Fork: 2 of 2
# Warmup Iteration   1: 30,951 ns/op
# Warmup Iteration   2: 28,991 ns/op
# Warmup Iteration   3: 28,302 ns/op
Iteration   1: 28,280 ns/op
Iteration   2: 28,279 ns/op
Iteration   3: 28,168 ns/op
Iteration   4: 28,165 ns/op
Iteration   5: 28,220 ns/op
Iteration   6: 28,181 ns/op
Iteration   7: 28,314 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  28,273 ±(99.9%) 0,805 ns/op [Average]
  (min, avg, max) = (27,650, 28,273, 30,472), stdev = 0,714
  CI (99.9%): [27,468, 29,078] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = Short)

# Run progress: 22,45% complete, ETA 01:16:24
# Fork: 1 of 2
# Warmup Iteration   1: 33,625 ns/op
# Warmup Iteration   2: 32,613 ns/op
# Warmup Iteration   3: 31,690 ns/op
Iteration   1: 31,736 ns/op
Iteration   2: 31,633 ns/op
Iteration   3: 31,814 ns/op
Iteration   4: 31,651 ns/op
Iteration   5: 31,699 ns/op
Iteration   6: 31,594 ns/op
Iteration   7: 31,735 ns/op

# Run progress: 22,96% complete, ETA 01:15:54
# Fork: 2 of 2
# Warmup Iteration   1: 33,534 ns/op
# Warmup Iteration   2: 32,347 ns/op
# Warmup Iteration   3: 31,570 ns/op
Iteration   1: 31,803 ns/op
Iteration   2: 31,648 ns/op
Iteration   3: 31,887 ns/op
Iteration   4: 31,715 ns/op
Iteration   5: 31,759 ns/op
Iteration   6: 31,778 ns/op
Iteration   7: 31,697 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  31,725 ±(99.9%) 0,090 ns/op [Average]
  (min, avg, max) = (31,594, 31,725, 31,887), stdev = 0,080
  CI (99.9%): [31,635, 31,815] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = Medium)

# Run progress: 23,47% complete, ETA 01:15:23
# Fork: 1 of 2
# Warmup Iteration   1: 35,200 ns/op
# Warmup Iteration   2: 34,086 ns/op
# Warmup Iteration   3: 33,735 ns/op
Iteration   1: 33,610 ns/op
Iteration   2: 33,814 ns/op
Iteration   3: 33,865 ns/op
Iteration   4: 33,779 ns/op
Iteration   5: 33,770 ns/op
Iteration   6: 33,770 ns/op
Iteration   7: 33,532 ns/op

# Run progress: 23,98% complete, ETA 01:14:53
# Fork: 2 of 2
# Warmup Iteration   1: 36,257 ns/op
# Warmup Iteration   2: 34,511 ns/op
# Warmup Iteration   3: 33,515 ns/op
Iteration   1: 33,388 ns/op
Iteration   2: 33,516 ns/op
Iteration   3: 33,357 ns/op
Iteration   4: 33,340 ns/op
Iteration   5: 33,394 ns/op
Iteration   6: 33,554 ns/op
Iteration   7: 33,520 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  33,586 ±(99.9%) 0,207 ns/op [Average]
  (min, avg, max) = (33,340, 33,586, 33,865), stdev = 0,183
  CI (99.9%): [33,380, 33,793] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = Long)

# Run progress: 24,49% complete, ETA 01:14:23
# Fork: 1 of 2
# Warmup Iteration   1: 40,751 ns/op
# Warmup Iteration   2: 39,508 ns/op
# Warmup Iteration   3: 38,693 ns/op
Iteration   1: 38,810 ns/op
Iteration   2: 38,524 ns/op
Iteration   3: 38,396 ns/op
Iteration   4: 38,469 ns/op
Iteration   5: 38,537 ns/op
Iteration   6: 38,551 ns/op
Iteration   7: 38,672 ns/op

# Run progress: 25,00% complete, ETA 01:13:53
# Fork: 2 of 2
# Warmup Iteration   1: 41,072 ns/op
# Warmup Iteration   2: 39,457 ns/op
# Warmup Iteration   3: 38,841 ns/op
Iteration   1: 39,258 ns/op
Iteration   2: 39,111 ns/op
Iteration   3: 39,032 ns/op
Iteration   4: 39,193 ns/op
Iteration   5: 39,460 ns/op
Iteration   6: 39,166 ns/op
Iteration   7: 39,125 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  38,879 ±(99.9%) 0,396 ns/op [Average]
  (min, avg, max) = (38,396, 38,879, 39,460), stdev = 0,351
  CI (99.9%): [38,483, 39,275] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = VeryLong)

# Run progress: 25,51% complete, ETA 01:13:23
# Fork: 1 of 2
# Warmup Iteration   1: 91,305 ns/op
# Warmup Iteration   2: 86,724 ns/op
# Warmup Iteration   3: 85,909 ns/op
Iteration   1: 85,748 ns/op
Iteration   2: 87,026 ns/op
Iteration   3: 86,561 ns/op
Iteration   4: 86,568 ns/op
Iteration   5: 87,096 ns/op
Iteration   6: 87,083 ns/op
Iteration   7: 87,121 ns/op

# Run progress: 26,02% complete, ETA 01:12:53
# Fork: 2 of 2
# Warmup Iteration   1: 91,898 ns/op
# Warmup Iteration   2: 87,202 ns/op
# Warmup Iteration   3: 86,073 ns/op
Iteration   1: 86,911 ns/op
Iteration   2: 86,236 ns/op
Iteration   3: 86,826 ns/op
Iteration   4: 85,629 ns/op
Iteration   5: 86,641 ns/op
Iteration   6: 87,240 ns/op
Iteration   7: 86,794 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  86,677 ±(99.9%) 0,564 ns/op [Average]
  (min, avg, max) = (85,629, 86,677, 87,240), stdev = 0,500
  CI (99.9%): [86,113, 87,241] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 26,53% complete, ETA 01:12:22
# Fork: 1 of 2
# Warmup Iteration   1: 92,614 ns/op
# Warmup Iteration   2: 86,984 ns/op
# Warmup Iteration   3: 86,740 ns/op
Iteration   1: 87,720 ns/op
Iteration   2: 87,057 ns/op
Iteration   3: 86,764 ns/op
Iteration   4: 86,654 ns/op
Iteration   5: 87,139 ns/op
Iteration   6: 87,318 ns/op
Iteration   7: 86,823 ns/op

# Run progress: 27,04% complete, ETA 01:11:52
# Fork: 2 of 2
# Warmup Iteration   1: 92,371 ns/op
# Warmup Iteration   2: 87,324 ns/op
# Warmup Iteration   3: 86,999 ns/op
Iteration   1: 86,937 ns/op
Iteration   2: 87,500 ns/op
Iteration   3: 86,934 ns/op
Iteration   4: 86,946 ns/op
Iteration   5: 86,849 ns/op
Iteration   6: 87,101 ns/op
Iteration   7: 86,469 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.concatOptimizedMacros":
  87,015 ±(99.9%) 0,373 ns/op [Average]
  (min, avg, max) = (86,469, 87,015, 87,720), stdev = 0,331
  CI (99.9%): [86,642, 87,388] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = Tiny)

# Run progress: 27,55% complete, ETA 01:11:22
# Fork: 1 of 2
# Warmup Iteration   1: 1206,014 ns/op
# Warmup Iteration   2: 996,473 ns/op
# Warmup Iteration   3: 998,228 ns/op
Iteration   1: 998,017 ns/op
Iteration   2: 1001,278 ns/op
Iteration   3: 998,546 ns/op
Iteration   4: 997,598 ns/op
Iteration   5: 996,567 ns/op
Iteration   6: 999,189 ns/op
Iteration   7: 1000,345 ns/op

# Run progress: 28,06% complete, ETA 01:10:52
# Fork: 2 of 2
# Warmup Iteration   1: 1175,830 ns/op
# Warmup Iteration   2: 1008,553 ns/op
# Warmup Iteration   3: 1010,126 ns/op
Iteration   1: 1009,976 ns/op
Iteration   2: 1009,672 ns/op
Iteration   3: 1011,123 ns/op
Iteration   4: 1009,757 ns/op
Iteration   5: 1006,858 ns/op
Iteration   6: 1009,720 ns/op
Iteration   7: 1009,508 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1004,154 ±(99.9%) 6,475 ns/op [Average]
  (min, avg, max) = (996,567, 1004,154, 1011,123), stdev = 5,740
  CI (99.9%): [997,679, 1010,629] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = VeryShort)

# Run progress: 28,57% complete, ETA 01:10:22
# Fork: 1 of 2
# Warmup Iteration   1: 1193,283 ns/op
# Warmup Iteration   2: 1002,228 ns/op
# Warmup Iteration   3: 998,022 ns/op
Iteration   1: 995,282 ns/op
Iteration   2: 999,569 ns/op
Iteration   3: 995,704 ns/op
Iteration   4: 999,297 ns/op
Iteration   5: 997,699 ns/op
Iteration   6: 998,236 ns/op
Iteration   7: 997,157 ns/op

# Run progress: 29,08% complete, ETA 01:09:52
# Fork: 2 of 2
# Warmup Iteration   1: 1190,606 ns/op
# Warmup Iteration   2: 1001,198 ns/op
# Warmup Iteration   3: 1003,371 ns/op
Iteration   1: 1008,413 ns/op
Iteration   2: 1011,317 ns/op
Iteration   3: 1005,244 ns/op
Iteration   4: 1005,548 ns/op
Iteration   5: 1005,648 ns/op
Iteration   6: 1007,212 ns/op
Iteration   7: 1008,378 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1002,479 ±(99.9%) 6,124 ns/op [Average]
  (min, avg, max) = (995,282, 1002,479, 1011,317), stdev = 5,429
  CI (99.9%): [996,355, 1008,603] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = Short)

# Run progress: 29,59% complete, ETA 01:09:22
# Fork: 1 of 2
# Warmup Iteration   1: 1220,018 ns/op
# Warmup Iteration   2: 1044,391 ns/op
# Warmup Iteration   3: 1035,692 ns/op
Iteration   1: 1040,489 ns/op
Iteration   2: 1041,904 ns/op
Iteration   3: 1043,093 ns/op
Iteration   4: 1043,056 ns/op
Iteration   5: 1041,304 ns/op
Iteration   6: 1041,708 ns/op
Iteration   7: 1041,752 ns/op

# Run progress: 30,10% complete, ETA 01:08:51
# Fork: 2 of 2
# Warmup Iteration   1: 1262,124 ns/op
# Warmup Iteration   2: 1052,189 ns/op
# Warmup Iteration   3: 1048,336 ns/op
Iteration   1: 1053,450 ns/op
Iteration   2: 1053,373 ns/op
Iteration   3: 1054,473 ns/op
Iteration   4: 1053,834 ns/op
Iteration   5: 1059,412 ns/op
Iteration   6: 1052,616 ns/op
Iteration   7: 1051,752 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1048,015 ±(99.9%) 7,441 ns/op [Average]
  (min, avg, max) = (1040,489, 1048,015, 1059,412), stdev = 6,597
  CI (99.9%): [1040,574, 1055,457] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = Medium)

# Run progress: 30,61% complete, ETA 01:08:21
# Fork: 1 of 2
# Warmup Iteration   1: 1291,506 ns/op
# Warmup Iteration   2: 1084,032 ns/op
# Warmup Iteration   3: 1079,177 ns/op
Iteration   1: 1081,691 ns/op
Iteration   2: 1075,029 ns/op
Iteration   3: 1075,214 ns/op
Iteration   4: 1076,303 ns/op
Iteration   5: 1075,453 ns/op
Iteration   6: 1071,844 ns/op
Iteration   7: 1079,595 ns/op

# Run progress: 31,12% complete, ETA 01:07:51
# Fork: 2 of 2
# Warmup Iteration   1: 1219,655 ns/op
# Warmup Iteration   2: 1037,352 ns/op
# Warmup Iteration   3: 1031,336 ns/op
Iteration   1: 1036,058 ns/op
Iteration   2: 1035,344 ns/op
Iteration   3: 1040,572 ns/op
Iteration   4: 1036,715 ns/op
Iteration   5: 1035,671 ns/op
Iteration   6: 1040,174 ns/op
Iteration   7: 1035,275 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1056,781 ±(99.9%) 23,221 ns/op [Average]
  (min, avg, max) = (1035,275, 1056,781, 1081,691), stdev = 20,585
  CI (99.9%): [1033,560, 1080,003] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = Long)

# Run progress: 31,63% complete, ETA 01:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 1335,615 ns/op
# Warmup Iteration   2: 1103,167 ns/op
# Warmup Iteration   3: 1087,756 ns/op
Iteration   1: 1090,323 ns/op
Iteration   2: 1094,707 ns/op
Iteration   3: 1090,414 ns/op
Iteration   4: 1085,075 ns/op
Iteration   5: 1087,627 ns/op
Iteration   6: 1087,678 ns/op
Iteration   7: 1091,441 ns/op

# Run progress: 32,14% complete, ETA 01:06:51
# Fork: 2 of 2
# Warmup Iteration   1: 1304,217 ns/op
# Warmup Iteration   2: 1076,871 ns/op
# Warmup Iteration   3: 1069,479 ns/op
Iteration   1: 1071,101 ns/op
Iteration   2: 1065,228 ns/op
Iteration   3: 1069,441 ns/op
Iteration   4: 1068,124 ns/op
Iteration   5: 1074,475 ns/op
Iteration   6: 1072,840 ns/op
Iteration   7: 1069,042 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1079,823 ±(99.9%) 11,940 ns/op [Average]
  (min, avg, max) = (1065,228, 1079,823, 1094,707), stdev = 10,585
  CI (99.9%): [1067,882, 1091,763] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = VeryLong)

# Run progress: 32,65% complete, ETA 01:06:21
# Fork: 1 of 2
# Warmup Iteration   1: 1414,642 ns/op
# Warmup Iteration   2: 1185,251 ns/op
# Warmup Iteration   3: 1196,482 ns/op
Iteration   1: 1184,000 ns/op
Iteration   2: 1180,698 ns/op
Iteration   3: 1186,633 ns/op
Iteration   4: 1182,771 ns/op
Iteration   5: 1187,915 ns/op
Iteration   6: 1189,791 ns/op
Iteration   7: 1181,314 ns/op

# Run progress: 33,16% complete, ETA 01:05:50
# Fork: 2 of 2
# Warmup Iteration   1: 1444,962 ns/op
# Warmup Iteration   2: 1203,493 ns/op
# Warmup Iteration   3: 1195,525 ns/op
Iteration   1: 1213,988 ns/op
Iteration   2: 1210,264 ns/op
Iteration   3: 1208,966 ns/op
Iteration   4: 1203,324 ns/op
Iteration   5: 1199,229 ns/op
Iteration   6: 1205,373 ns/op
Iteration   7: 1203,752 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1195,573 ±(99.9%) 13,512 ns/op [Average]
  (min, avg, max) = (1180,698, 1195,573, 1213,988), stdev = 11,978
  CI (99.9%): [1182,061, 1209,085] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 33,67% complete, ETA 01:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 1358,340 ns/op
# Warmup Iteration   2: 1167,018 ns/op
# Warmup Iteration   3: 1172,176 ns/op
Iteration   1: 1177,050 ns/op
Iteration   2: 1174,361 ns/op
Iteration   3: 1178,010 ns/op
Iteration   4: 1172,746 ns/op
Iteration   5: 1171,552 ns/op
Iteration   6: 1175,243 ns/op
Iteration   7: 1176,862 ns/op

# Run progress: 34,18% complete, ETA 01:04:50
# Fork: 2 of 2
# Warmup Iteration   1: 1390,546 ns/op
# Warmup Iteration   2: 1154,757 ns/op
# Warmup Iteration   3: 1166,111 ns/op
Iteration   1: 1157,109 ns/op
Iteration   2: 1153,882 ns/op
Iteration   3: 1153,677 ns/op
Iteration   4: 1149,794 ns/op
Iteration   5: 1141,105 ns/op
Iteration   6: 1144,004 ns/op
Iteration   7: 1149,398 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.fInterpolator":
  1162,485 ±(99.9%) 15,526 ns/op [Average]
  (min, avg, max) = (1141,105, 1162,485, 1178,010), stdev = 13,763
  CI (99.9%): [1146,959, 1178,011] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = Tiny)

# Run progress: 34,69% complete, ETA 01:04:20
# Fork: 1 of 2
# Warmup Iteration   1: 18,399 ns/op
# Warmup Iteration   2: 17,975 ns/op
# Warmup Iteration   3: 17,322 ns/op
Iteration   1: 17,374 ns/op
Iteration   2: 17,291 ns/op
Iteration   3: 17,297 ns/op
Iteration   4: 17,267 ns/op
Iteration   5: 17,307 ns/op
Iteration   6: 17,324 ns/op
Iteration   7: 17,328 ns/op

# Run progress: 35,20% complete, ETA 01:03:50
# Fork: 2 of 2
# Warmup Iteration   1: 18,380 ns/op
# Warmup Iteration   2: 17,885 ns/op
# Warmup Iteration   3: 17,409 ns/op
Iteration   1: 17,266 ns/op
Iteration   2: 17,247 ns/op
Iteration   3: 17,207 ns/op
Iteration   4: 17,249 ns/op
Iteration   5: 17,228 ns/op
Iteration   6: 17,396 ns/op
Iteration   7: 17,314 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  17,292 ±(99.9%) 0,060 ns/op [Average]
  (min, avg, max) = (17,207, 17,292, 17,396), stdev = 0,053
  CI (99.9%): [17,232, 17,353] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = VeryShort)

# Run progress: 35,71% complete, ETA 01:03:20
# Fork: 1 of 2
# Warmup Iteration   1: 25,657 ns/op
# Warmup Iteration   2: 24,730 ns/op
# Warmup Iteration   3: 24,143 ns/op
Iteration   1: 24,046 ns/op
Iteration   2: 24,227 ns/op
Iteration   3: 23,897 ns/op
Iteration   4: 23,918 ns/op
Iteration   5: 24,001 ns/op
Iteration   6: 24,103 ns/op
Iteration   7: 24,107 ns/op

# Run progress: 36,22% complete, ETA 01:02:49
# Fork: 2 of 2
# Warmup Iteration   1: 25,045 ns/op
# Warmup Iteration   2: 24,489 ns/op
# Warmup Iteration   3: 24,019 ns/op
Iteration   1: 23,997 ns/op
Iteration   2: 24,236 ns/op
Iteration   3: 23,954 ns/op
Iteration   4: 24,116 ns/op
Iteration   5: 24,077 ns/op
Iteration   6: 24,143 ns/op
Iteration   7: 24,066 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  24,064 ±(99.9%) 0,117 ns/op [Average]
  (min, avg, max) = (23,897, 24,064, 24,236), stdev = 0,103
  CI (99.9%): [23,947, 24,180] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = Short)

# Run progress: 36,73% complete, ETA 01:02:19
# Fork: 1 of 2
# Warmup Iteration   1: 27,278 ns/op
# Warmup Iteration   2: 26,271 ns/op
# Warmup Iteration   3: 25,947 ns/op
Iteration   1: 26,024 ns/op
Iteration   2: 25,958 ns/op
Iteration   3: 25,821 ns/op
Iteration   4: 26,029 ns/op
Iteration   5: 25,822 ns/op
Iteration   6: 25,996 ns/op
Iteration   7: 25,988 ns/op

# Run progress: 37,24% complete, ETA 01:01:49
# Fork: 2 of 2
# Warmup Iteration   1: 26,515 ns/op
# Warmup Iteration   2: 26,058 ns/op
# Warmup Iteration   3: 25,638 ns/op
Iteration   1: 25,669 ns/op
Iteration   2: 25,729 ns/op
Iteration   3: 25,464 ns/op
Iteration   4: 25,496 ns/op
Iteration   5: 25,463 ns/op
Iteration   6: 25,513 ns/op
Iteration   7: 25,499 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  25,748 ±(99.9%) 0,258 ns/op [Average]
  (min, avg, max) = (25,463, 25,748, 26,029), stdev = 0,228
  CI (99.9%): [25,490, 26,006] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = Medium)

# Run progress: 37,76% complete, ETA 01:01:19
# Fork: 1 of 2
# Warmup Iteration   1: 30,851 ns/op
# Warmup Iteration   2: 29,988 ns/op
# Warmup Iteration   3: 29,352 ns/op
Iteration   1: 29,242 ns/op
Iteration   2: 29,153 ns/op
Iteration   3: 29,102 ns/op
Iteration   4: 29,249 ns/op
Iteration   5: 29,216 ns/op
Iteration   6: 29,143 ns/op
Iteration   7: 29,208 ns/op

# Run progress: 38,27% complete, ETA 01:00:49
# Fork: 2 of 2
# Warmup Iteration   1: 31,738 ns/op
# Warmup Iteration   2: 29,798 ns/op
# Warmup Iteration   3: 29,186 ns/op
Iteration   1: 29,196 ns/op
Iteration   2: 29,230 ns/op
Iteration   3: 29,158 ns/op
Iteration   4: 29,185 ns/op
Iteration   5: 29,181 ns/op
Iteration   6: 29,208 ns/op
Iteration   7: 29,230 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  29,193 ±(99.9%) 0,048 ns/op [Average]
  (min, avg, max) = (29,102, 29,193, 29,249), stdev = 0,042
  CI (99.9%): [29,145, 29,241] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = Long)

# Run progress: 38,78% complete, ETA 01:00:19
# Fork: 1 of 2
# Warmup Iteration   1: 36,400 ns/op
# Warmup Iteration   2: 35,000 ns/op
# Warmup Iteration   3: 34,545 ns/op
Iteration   1: 34,483 ns/op
Iteration   2: 34,569 ns/op
Iteration   3: 34,676 ns/op
Iteration   4: 34,449 ns/op
Iteration   5: 34,449 ns/op
Iteration   6: 34,430 ns/op
Iteration   7: 34,581 ns/op

# Run progress: 39,29% complete, ETA 00:59:49
# Fork: 2 of 2
# Warmup Iteration   1: 37,029 ns/op
# Warmup Iteration   2: 35,713 ns/op
# Warmup Iteration   3: 34,837 ns/op
Iteration   1: 34,748 ns/op
Iteration   2: 34,950 ns/op
Iteration   3: 34,785 ns/op
Iteration   4: 34,722 ns/op
Iteration   5: 34,807 ns/op
Iteration   6: 34,832 ns/op
Iteration   7: 34,760 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  34,660 ±(99.9%) 0,188 ns/op [Average]
  (min, avg, max) = (34,430, 34,660, 34,950), stdev = 0,166
  CI (99.9%): [34,472, 34,848] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = VeryLong)

# Run progress: 39,80% complete, ETA 00:59:18
# Fork: 1 of 2
# Warmup Iteration   1: 90,615 ns/op
# Warmup Iteration   2: 86,247 ns/op
# Warmup Iteration   3: 84,691 ns/op
Iteration   1: 84,983 ns/op
Iteration   2: 84,379 ns/op
Iteration   3: 84,613 ns/op
Iteration   4: 84,733 ns/op
Iteration   5: 84,788 ns/op
Iteration   6: 84,685 ns/op
Iteration   7: 84,926 ns/op

# Run progress: 40,31% complete, ETA 00:58:48
# Fork: 2 of 2
# Warmup Iteration   1: 90,559 ns/op
# Warmup Iteration   2: 85,836 ns/op
# Warmup Iteration   3: 84,795 ns/op
Iteration   1: 84,933 ns/op
Iteration   2: 84,883 ns/op
Iteration   3: 84,341 ns/op
Iteration   4: 84,916 ns/op
Iteration   5: 84,975 ns/op
Iteration   6: 84,818 ns/op
Iteration   7: 84,843 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  84,772 ±(99.9%) 0,232 ns/op [Average]
  (min, avg, max) = (84,341, 84,772, 84,983), stdev = 0,206
  CI (99.9%): [84,540, 85,004] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 40,82% complete, ETA 00:58:18
# Fork: 1 of 2
# Warmup Iteration   1: 90,408 ns/op
# Warmup Iteration   2: 86,137 ns/op
# Warmup Iteration   3: 85,068 ns/op
Iteration   1: 84,913 ns/op
Iteration   2: 84,575 ns/op
Iteration   3: 85,018 ns/op
Iteration   4: 84,654 ns/op
Iteration   5: 84,670 ns/op
Iteration   6: 84,755 ns/op
Iteration   7: 85,203 ns/op

# Run progress: 41,33% complete, ETA 00:57:48
# Fork: 2 of 2
# Warmup Iteration   1: 90,523 ns/op
# Warmup Iteration   2: 86,147 ns/op
# Warmup Iteration   3: 84,833 ns/op
Iteration   1: 85,319 ns/op
Iteration   2: 84,942 ns/op
Iteration   3: 85,034 ns/op
Iteration   4: 84,641 ns/op
Iteration   5: 85,286 ns/op
Iteration   6: 85,318 ns/op
Iteration   7: 85,388 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.javaConcat":
  84,980 ±(99.9%) 0,325 ns/op [Average]
  (min, avg, max) = (84,575, 84,980, 85,388), stdev = 0,288
  CI (99.9%): [84,655, 85,305] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = Tiny)

# Run progress: 41,84% complete, ETA 00:57:18
# Fork: 1 of 2
# Warmup Iteration   1: 1028,101 ns/op
# Warmup Iteration   2: 930,048 ns/op
# Warmup Iteration   3: 928,195 ns/op
Iteration   1: 921,537 ns/op
Iteration   2: 923,251 ns/op
Iteration   3: 927,314 ns/op
Iteration   4: 934,984 ns/op
Iteration   5: 925,295 ns/op
Iteration   6: 919,188 ns/op
Iteration   7: 916,455 ns/op

# Run progress: 42,35% complete, ETA 00:56:48
# Fork: 2 of 2
# Warmup Iteration   1: 1061,509 ns/op
# Warmup Iteration   2: 958,934 ns/op
# Warmup Iteration   3: 957,500 ns/op
Iteration   1: 956,250 ns/op
Iteration   2: 953,746 ns/op
Iteration   3: 953,822 ns/op
Iteration   4: 955,882 ns/op
Iteration   5: 958,962 ns/op
Iteration   6: 955,286 ns/op
Iteration   7: 959,880 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  940,132 ±(99.9%) 19,528 ns/op [Average]
  (min, avg, max) = (916,455, 940,132, 959,880), stdev = 17,311
  CI (99.9%): [920,604, 959,660] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = VeryShort)

# Run progress: 42,86% complete, ETA 00:56:17
# Fork: 1 of 2
# Warmup Iteration   1: 1086,275 ns/op
# Warmup Iteration   2: 976,435 ns/op
# Warmup Iteration   3: 972,098 ns/op
Iteration   1: 975,156 ns/op
Iteration   2: 968,256 ns/op
Iteration   3: 967,645 ns/op
Iteration   4: 970,300 ns/op
Iteration   5: 970,069 ns/op
Iteration   6: 971,881 ns/op
Iteration   7: 970,815 ns/op

# Run progress: 43,37% complete, ETA 00:55:47
# Fork: 2 of 2
# Warmup Iteration   1: 1100,630 ns/op
# Warmup Iteration   2: 974,389 ns/op
# Warmup Iteration   3: 974,521 ns/op
Iteration   1: 978,714 ns/op
Iteration   2: 976,364 ns/op
Iteration   3: 977,115 ns/op
Iteration   4: 981,803 ns/op
Iteration   5: 972,338 ns/op
Iteration   6: 973,166 ns/op
Iteration   7: 977,155 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  973,627 ±(99.9%) 4,728 ns/op [Average]
  (min, avg, max) = (967,645, 973,627, 981,803), stdev = 4,191
  CI (99.9%): [968,899, 978,355] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = Short)

# Run progress: 43,88% complete, ETA 00:55:17
# Fork: 1 of 2
# Warmup Iteration   1: 1131,127 ns/op
# Warmup Iteration   2: 1028,566 ns/op
# Warmup Iteration   3: 1016,925 ns/op
Iteration   1: 1016,417 ns/op
Iteration   2: 1012,660 ns/op
Iteration   3: 1014,536 ns/op
Iteration   4: 1017,796 ns/op
Iteration   5: 1022,916 ns/op
Iteration   6: 1019,157 ns/op
Iteration   7: 1020,271 ns/op

# Run progress: 44,39% complete, ETA 00:54:47
# Fork: 2 of 2
# Warmup Iteration   1: 1148,856 ns/op
# Warmup Iteration   2: 1019,463 ns/op
# Warmup Iteration   3: 1018,611 ns/op
Iteration   1: 1022,834 ns/op
Iteration   2: 1016,064 ns/op
Iteration   3: 1016,095 ns/op
Iteration   4: 1023,098 ns/op
Iteration   5: 1019,771 ns/op
Iteration   6: 1019,203 ns/op
Iteration   7: 1016,656 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  1018,391 ±(99.9%) 3,631 ns/op [Average]
  (min, avg, max) = (1012,660, 1018,391, 1023,098), stdev = 3,219
  CI (99.9%): [1014,760, 1022,022] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = Medium)

# Run progress: 44,90% complete, ETA 00:54:17
# Fork: 1 of 2
# Warmup Iteration   1: 1133,570 ns/op
# Warmup Iteration   2: 1036,717 ns/op
# Warmup Iteration   3: 1041,485 ns/op
Iteration   1: 1040,153 ns/op
Iteration   2: 1034,918 ns/op
Iteration   3: 1031,013 ns/op
Iteration   4: 1039,003 ns/op
Iteration   5: 1038,311 ns/op
Iteration   6: 1039,267 ns/op
Iteration   7: 1042,497 ns/op

# Run progress: 45,41% complete, ETA 00:53:47
# Fork: 2 of 2
# Warmup Iteration   1: 1148,373 ns/op
# Warmup Iteration   2: 1032,655 ns/op
# Warmup Iteration   3: 1026,858 ns/op
Iteration   1: 1031,242 ns/op
Iteration   2: 1023,099 ns/op
Iteration   3: 1027,057 ns/op
Iteration   4: 1024,439 ns/op
Iteration   5: 1023,399 ns/op
Iteration   6: 1021,403 ns/op
Iteration   7: 1026,727 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  1031,609 ±(99.9%) 8,285 ns/op [Average]
  (min, avg, max) = (1021,403, 1031,609, 1042,497), stdev = 7,344
  CI (99.9%): [1023,324, 1039,894] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = Long)

# Run progress: 45,92% complete, ETA 00:53:16
# Fork: 1 of 2
# Warmup Iteration   1: 1163,721 ns/op
# Warmup Iteration   2: 1044,405 ns/op
# Warmup Iteration   3: 1041,543 ns/op
Iteration   1: 1049,346 ns/op
Iteration   2: 1039,730 ns/op
Iteration   3: 1039,155 ns/op
Iteration   4: 1043,355 ns/op
Iteration   5: 1046,547 ns/op
Iteration   6: 1043,089 ns/op
Iteration   7: 1040,128 ns/op

# Run progress: 46,43% complete, ETA 00:52:46
# Fork: 2 of 2
# Warmup Iteration   1: 1160,867 ns/op
# Warmup Iteration   2: 1050,322 ns/op
# Warmup Iteration   3: 1051,258 ns/op
Iteration   1: 1050,577 ns/op
Iteration   2: 1048,742 ns/op
Iteration   3: 1050,758 ns/op
Iteration   4: 1052,002 ns/op
Iteration   5: 1054,286 ns/op
Iteration   6: 1050,417 ns/op
Iteration   7: 1050,723 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  1047,061 ±(99.9%) 5,679 ns/op [Average]
  (min, avg, max) = (1039,155, 1047,061, 1054,286), stdev = 5,034
  CI (99.9%): [1041,383, 1052,740] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = VeryLong)

# Run progress: 46,94% complete, ETA 00:52:16
# Fork: 1 of 2
# Warmup Iteration   1: 1321,333 ns/op
# Warmup Iteration   2: 1185,722 ns/op
# Warmup Iteration   3: 1188,682 ns/op
Iteration   1: 1197,733 ns/op
Iteration   2: 1178,038 ns/op
Iteration   3: 1180,642 ns/op
Iteration   4: 1179,216 ns/op
Iteration   5: 1193,280 ns/op
Iteration   6: 1186,230 ns/op
Iteration   7: 1195,036 ns/op

# Run progress: 47,45% complete, ETA 00:51:46
# Fork: 2 of 2
# Warmup Iteration   1: 1286,798 ns/op
# Warmup Iteration   2: 1168,620 ns/op
# Warmup Iteration   3: 1167,988 ns/op
Iteration   1: 1163,983 ns/op
Iteration   2: 1163,019 ns/op
Iteration   3: 1159,755 ns/op
Iteration   4: 1160,497 ns/op
Iteration   5: 1163,744 ns/op
Iteration   6: 1164,641 ns/op
Iteration   7: 1167,567 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  1175,242 ±(99.9%) 15,434 ns/op [Average]
  (min, avg, max) = (1159,755, 1175,242, 1197,733), stdev = 13,682
  CI (99.9%): [1159,808, 1190,675] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 47,96% complete, ETA 00:51:16
# Fork: 1 of 2
# Warmup Iteration   1: 1346,771 ns/op
# Warmup Iteration   2: 1228,007 ns/op
# Warmup Iteration   3: 1216,810 ns/op
Iteration   1: 1219,582 ns/op
Iteration   2: 1210,701 ns/op
Iteration   3: 1207,400 ns/op
Iteration   4: 1202,335 ns/op
Iteration   5: 1214,879 ns/op
Iteration   6: 1209,569 ns/op
Iteration   7: 1216,238 ns/op

# Run progress: 48,47% complete, ETA 00:50:46
# Fork: 2 of 2
# Warmup Iteration   1: 1365,513 ns/op
# Warmup Iteration   2: 1222,016 ns/op
# Warmup Iteration   3: 1226,615 ns/op
Iteration   1: 1222,799 ns/op
Iteration   2: 1215,072 ns/op
Iteration   3: 1214,227 ns/op
Iteration   4: 1208,488 ns/op
Iteration   5: 1206,191 ns/op
Iteration   6: 1212,436 ns/op
Iteration   7: 1219,712 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.messageFormat":
  1212,831 ±(99.9%) 6,510 ns/op [Average]
  (min, avg, max) = (1202,335, 1212,831, 1222,799), stdev = 5,771
  CI (99.9%): [1206,320, 1219,341] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = Tiny)

# Run progress: 48,98% complete, ETA 00:50:16
# Fork: 1 of 2
# Warmup Iteration   1: 45,670 ns/op
# Warmup Iteration   2: 41,847 ns/op
# Warmup Iteration   3: 40,722 ns/op
Iteration   1: 40,822 ns/op
Iteration   2: 40,708 ns/op
Iteration   3: 40,572 ns/op
Iteration   4: 40,757 ns/op
Iteration   5: 40,693 ns/op
Iteration   6: 40,694 ns/op
Iteration   7: 40,844 ns/op

# Run progress: 49,49% complete, ETA 00:49:45
# Fork: 2 of 2
# Warmup Iteration   1: 46,144 ns/op
# Warmup Iteration   2: 42,646 ns/op
# Warmup Iteration   3: 41,279 ns/op
Iteration   1: 41,351 ns/op
Iteration   2: 41,257 ns/op
Iteration   3: 41,205 ns/op
Iteration   4: 41,372 ns/op
Iteration   5: 41,426 ns/op
Iteration   6: 41,219 ns/op
Iteration   7: 41,429 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  41,025 ±(99.9%) 0,363 ns/op [Average]
  (min, avg, max) = (40,572, 41,025, 41,429), stdev = 0,322
  CI (99.9%): [40,662, 41,388] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = VeryShort)

# Run progress: 50,00% complete, ETA 00:49:15
# Fork: 1 of 2
# Warmup Iteration   1: 65,646 ns/op
# Warmup Iteration   2: 61,654 ns/op
# Warmup Iteration   3: 61,461 ns/op
Iteration   1: 61,134 ns/op
Iteration   2: 61,390 ns/op
Iteration   3: 60,943 ns/op
Iteration   4: 61,341 ns/op
Iteration   5: 60,987 ns/op
Iteration   6: 61,114 ns/op
Iteration   7: 61,052 ns/op

# Run progress: 50,51% complete, ETA 00:48:45
# Fork: 2 of 2
# Warmup Iteration   1: 64,706 ns/op
# Warmup Iteration   2: 61,903 ns/op
# Warmup Iteration   3: 61,141 ns/op
Iteration   1: 61,004 ns/op
Iteration   2: 61,220 ns/op
Iteration   3: 61,159 ns/op
Iteration   4: 61,521 ns/op
Iteration   5: 61,083 ns/op
Iteration   6: 61,268 ns/op
Iteration   7: 61,048 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  61,162 ±(99.9%) 0,189 ns/op [Average]
  (min, avg, max) = (60,943, 61,162, 61,521), stdev = 0,168
  CI (99.9%): [60,973, 61,351] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = Short)

# Run progress: 51,02% complete, ETA 00:48:15
# Fork: 1 of 2
# Warmup Iteration   1: 79,255 ns/op
# Warmup Iteration   2: 66,541 ns/op
# Warmup Iteration   3: 66,009 ns/op
Iteration   1: 65,527 ns/op
Iteration   2: 65,650 ns/op
Iteration   3: 65,472 ns/op
Iteration   4: 65,369 ns/op
Iteration   5: 65,468 ns/op
Iteration   6: 65,731 ns/op
Iteration   7: 65,563 ns/op

# Run progress: 51,53% complete, ETA 00:47:45
# Fork: 2 of 2
# Warmup Iteration   1: 79,074 ns/op
# Warmup Iteration   2: 67,163 ns/op
# Warmup Iteration   3: 65,808 ns/op
Iteration   1: 65,478 ns/op
Iteration   2: 65,446 ns/op
Iteration   3: 65,453 ns/op
Iteration   4: 65,964 ns/op
Iteration   5: 65,974 ns/op
Iteration   6: 65,304 ns/op
Iteration   7: 65,567 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  65,569 ±(99.9%) 0,226 ns/op [Average]
  (min, avg, max) = (65,304, 65,569, 65,974), stdev = 0,200
  CI (99.9%): [65,343, 65,795] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = Medium)

# Run progress: 52,04% complete, ETA 00:47:15
# Fork: 1 of 2
# Warmup Iteration   1: 87,590 ns/op
# Warmup Iteration   2: 71,829 ns/op
# Warmup Iteration   3: 70,848 ns/op
Iteration   1: 70,519 ns/op
Iteration   2: 70,933 ns/op
Iteration   3: 70,823 ns/op
Iteration   4: 70,686 ns/op
Iteration   5: 70,662 ns/op
Iteration   6: 71,220 ns/op
Iteration   7: 71,267 ns/op

# Run progress: 52,55% complete, ETA 00:46:44
# Fork: 2 of 2
# Warmup Iteration   1: 87,411 ns/op
# Warmup Iteration   2: 71,493 ns/op
# Warmup Iteration   3: 70,771 ns/op
Iteration   1: 70,858 ns/op
Iteration   2: 70,532 ns/op
Iteration   3: 70,666 ns/op
Iteration   4: 70,567 ns/op
Iteration   5: 70,463 ns/op
Iteration   6: 70,128 ns/op
Iteration   7: 70,470 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  70,700 ±(99.9%) 0,343 ns/op [Average]
  (min, avg, max) = (70,128, 70,700, 71,267), stdev = 0,304
  CI (99.9%): [70,356, 71,043] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = Long)

# Run progress: 53,06% complete, ETA 00:46:14
# Fork: 1 of 2
# Warmup Iteration   1: 120,310 ns/op
# Warmup Iteration   2: 103,780 ns/op
# Warmup Iteration   3: 102,547 ns/op
Iteration   1: 102,095 ns/op
Iteration   2: 102,424 ns/op
Iteration   3: 102,228 ns/op
Iteration   4: 102,060 ns/op
Iteration   5: 103,095 ns/op
Iteration   6: 102,122 ns/op
Iteration   7: 102,206 ns/op

# Run progress: 53,57% complete, ETA 00:45:44
# Fork: 2 of 2
# Warmup Iteration   1: 122,280 ns/op
# Warmup Iteration   2: 102,376 ns/op
# Warmup Iteration   3: 100,638 ns/op
Iteration   1: 100,972 ns/op
Iteration   2: 100,460 ns/op
Iteration   3: 100,858 ns/op
Iteration   4: 100,518 ns/op
Iteration   5: 100,967 ns/op
Iteration   6: 100,323 ns/op
Iteration   7: 100,696 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  101,502 ±(99.9%) 1,015 ns/op [Average]
  (min, avg, max) = (100,323, 101,502, 103,095), stdev = 0,900
  CI (99.9%): [100,487, 102,517] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = VeryLong)

# Run progress: 54,08% complete, ETA 00:45:14
# Fork: 1 of 2
# Warmup Iteration   1: 249,867 ns/op
# Warmup Iteration   2: 238,281 ns/op
# Warmup Iteration   3: 235,404 ns/op
Iteration   1: 238,654 ns/op
Iteration   2: 239,267 ns/op
Iteration   3: 237,042 ns/op
Iteration   4: 239,919 ns/op
Iteration   5: 240,241 ns/op
Iteration   6: 239,222 ns/op
Iteration   7: 239,581 ns/op

# Run progress: 54,59% complete, ETA 00:44:44
# Fork: 2 of 2
# Warmup Iteration   1: 249,499 ns/op
# Warmup Iteration   2: 243,761 ns/op
# Warmup Iteration   3: 238,434 ns/op
Iteration   1: 238,934 ns/op
Iteration   2: 236,476 ns/op
Iteration   3: 238,987 ns/op
Iteration   4: 235,577 ns/op
Iteration   5: 238,458 ns/op
Iteration   6: 237,502 ns/op
Iteration   7: 236,768 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  238,331 ±(99.9%) 1,600 ns/op [Average]
  (min, avg, max) = (235,577, 238,331, 240,241), stdev = 1,418
  CI (99.9%): [236,731, 239,930] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 55,10% complete, ETA 00:44:14
# Fork: 1 of 2
# Warmup Iteration   1: 247,098 ns/op
# Warmup Iteration   2: 235,946 ns/op
# Warmup Iteration   3: 235,427 ns/op
Iteration   1: 236,119 ns/op
Iteration   2: 231,749 ns/op
Iteration   3: 236,557 ns/op
Iteration   4: 234,582 ns/op
Iteration   5: 233,905 ns/op
Iteration   6: 234,930 ns/op
Iteration   7: 237,235 ns/op

# Run progress: 55,61% complete, ETA 00:43:43
# Fork: 2 of 2
# Warmup Iteration   1: 245,977 ns/op
# Warmup Iteration   2: 236,986 ns/op
# Warmup Iteration   3: 233,630 ns/op
Iteration   1: 236,375 ns/op
Iteration   2: 233,611 ns/op
Iteration   3: 235,223 ns/op
Iteration   4: 235,513 ns/op
Iteration   5: 235,949 ns/op
Iteration   6: 234,059 ns/op
Iteration   7: 235,760 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.rawInterpolator":
  235,112 ±(99.9%) 1,624 ns/op [Average]
  (min, avg, max) = (231,749, 235,112, 237,235), stdev = 1,440
  CI (99.9%): [233,488, 236,736] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = Tiny)

# Run progress: 56,12% complete, ETA 00:43:13
# Fork: 1 of 2
# Warmup Iteration   1: 45,950 ns/op
# Warmup Iteration   2: 41,918 ns/op
# Warmup Iteration   3: 40,352 ns/op
Iteration   1: 40,516 ns/op
Iteration   2: 40,368 ns/op
Iteration   3: 40,443 ns/op
Iteration   4: 40,392 ns/op
Iteration   5: 40,745 ns/op
Iteration   6: 40,628 ns/op
Iteration   7: 40,618 ns/op

# Run progress: 56,63% complete, ETA 00:42:43
# Fork: 2 of 2
# Warmup Iteration   1: 45,358 ns/op
# Warmup Iteration   2: 42,051 ns/op
# Warmup Iteration   3: 40,770 ns/op
Iteration   1: 40,930 ns/op
Iteration   2: 41,051 ns/op
Iteration   3: 40,844 ns/op
Iteration   4: 40,764 ns/op
Iteration   5: 41,040 ns/op
Iteration   6: 40,907 ns/op
Iteration   7: 40,838 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  40,720 ±(99.9%) 0,260 ns/op [Average]
  (min, avg, max) = (40,368, 40,720, 41,051), stdev = 0,231
  CI (99.9%): [40,460, 40,981] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = VeryShort)

# Run progress: 57,14% complete, ETA 00:42:13
# Fork: 1 of 2
# Warmup Iteration   1: 65,020 ns/op
# Warmup Iteration   2: 62,477 ns/op
# Warmup Iteration   3: 61,112 ns/op
Iteration   1: 61,552 ns/op
Iteration   2: 62,153 ns/op
Iteration   3: 61,165 ns/op
Iteration   4: 61,022 ns/op
Iteration   5: 60,978 ns/op
Iteration   6: 61,316 ns/op
Iteration   7: 61,502 ns/op

# Run progress: 57,65% complete, ETA 00:41:43
# Fork: 2 of 2
# Warmup Iteration   1: 65,401 ns/op
# Warmup Iteration   2: 61,505 ns/op
# Warmup Iteration   3: 60,787 ns/op
Iteration   1: 60,550 ns/op
Iteration   2: 60,239 ns/op
Iteration   3: 60,324 ns/op
Iteration   4: 60,673 ns/op
Iteration   5: 60,748 ns/op
Iteration   6: 60,666 ns/op
Iteration   7: 60,610 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  60,964 ±(99.9%) 0,599 ns/op [Average]
  (min, avg, max) = (60,239, 60,964, 62,153), stdev = 0,531
  CI (99.9%): [60,365, 61,564] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = Short)

# Run progress: 58,16% complete, ETA 00:41:13
# Fork: 1 of 2
# Warmup Iteration   1: 79,158 ns/op
# Warmup Iteration   2: 66,116 ns/op
# Warmup Iteration   3: 65,634 ns/op
Iteration   1: 65,145 ns/op
Iteration   2: 65,309 ns/op
Iteration   3: 65,347 ns/op
Iteration   4: 65,623 ns/op
Iteration   5: 65,213 ns/op
Iteration   6: 65,188 ns/op
Iteration   7: 65,563 ns/op

# Run progress: 58,67% complete, ETA 00:40:42
# Fork: 2 of 2
# Warmup Iteration   1: 79,759 ns/op
# Warmup Iteration   2: 64,352 ns/op
# Warmup Iteration   3: 63,322 ns/op
Iteration   1: 62,940 ns/op
Iteration   2: 63,335 ns/op
Iteration   3: 63,378 ns/op
Iteration   4: 63,473 ns/op
Iteration   5: 62,958 ns/op
Iteration   6: 63,014 ns/op
Iteration   7: 62,768 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  64,232 ±(99.9%) 1,322 ns/op [Average]
  (min, avg, max) = (62,768, 64,232, 65,623), stdev = 1,172
  CI (99.9%): [62,911, 65,554] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = Medium)

# Run progress: 59,18% complete, ETA 00:40:12
# Fork: 1 of 2
# Warmup Iteration   1: 85,854 ns/op
# Warmup Iteration   2: 71,377 ns/op
# Warmup Iteration   3: 70,511 ns/op
Iteration   1: 70,337 ns/op
Iteration   2: 70,713 ns/op
Iteration   3: 70,531 ns/op
Iteration   4: 71,135 ns/op
Iteration   5: 70,717 ns/op
Iteration   6: 70,465 ns/op
Iteration   7: 70,318 ns/op

# Run progress: 59,69% complete, ETA 00:39:42
# Fork: 2 of 2
# Warmup Iteration   1: 87,349 ns/op
# Warmup Iteration   2: 76,709 ns/op
# Warmup Iteration   3: 75,073 ns/op
Iteration   1: 74,752 ns/op
Iteration   2: 75,360 ns/op
Iteration   3: 74,951 ns/op
Iteration   4: 75,313 ns/op
Iteration   5: 75,426 ns/op
Iteration   6: 75,298 ns/op
Iteration   7: 74,968 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  72,877 ±(99.9%) 2,680 ns/op [Average]
  (min, avg, max) = (70,318, 72,877, 75,426), stdev = 2,375
  CI (99.9%): [70,198, 75,557] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = Long)

# Run progress: 60,20% complete, ETA 00:39:12
# Fork: 1 of 2
# Warmup Iteration   1: 121,651 ns/op
# Warmup Iteration   2: 101,676 ns/op
# Warmup Iteration   3: 101,616 ns/op
Iteration   1: 101,086 ns/op
Iteration   2: 102,359 ns/op
Iteration   3: 101,145 ns/op
Iteration   4: 101,980 ns/op
Iteration   5: 101,378 ns/op
Iteration   6: 102,583 ns/op
Iteration   7: 101,768 ns/op

# Run progress: 60,71% complete, ETA 00:38:42
# Fork: 2 of 2
# Warmup Iteration   1: 118,788 ns/op
# Warmup Iteration   2: 102,482 ns/op
# Warmup Iteration   3: 102,236 ns/op
Iteration   1: 102,511 ns/op
Iteration   2: 102,985 ns/op
Iteration   3: 102,302 ns/op
Iteration   4: 102,373 ns/op
Iteration   5: 102,109 ns/op
Iteration   6: 102,359 ns/op
Iteration   7: 101,831 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  102,055 ±(99.9%) 0,631 ns/op [Average]
  (min, avg, max) = (101,086, 102,055, 102,985), stdev = 0,559
  CI (99.9%): [101,424, 102,686] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = VeryLong)

# Run progress: 61,22% complete, ETA 00:38:12
# Fork: 1 of 2
# Warmup Iteration   1: 251,781 ns/op
# Warmup Iteration   2: 239,291 ns/op
# Warmup Iteration   3: 238,882 ns/op
Iteration   1: 237,660 ns/op
Iteration   2: 240,338 ns/op
Iteration   3: 237,114 ns/op
Iteration   4: 237,635 ns/op
Iteration   5: 234,566 ns/op
Iteration   6: 239,086 ns/op
Iteration   7: 236,558 ns/op

# Run progress: 61,73% complete, ETA 00:37:42
# Fork: 2 of 2
# Warmup Iteration   1: 252,582 ns/op
# Warmup Iteration   2: 238,168 ns/op
# Warmup Iteration   3: 235,908 ns/op
Iteration   1: 239,503 ns/op
Iteration   2: 239,848 ns/op
Iteration   3: 237,381 ns/op
Iteration   4: 239,122 ns/op
Iteration   5: 239,738 ns/op
Iteration   6: 237,245 ns/op
Iteration   7: 236,465 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  238,018 ±(99.9%) 1,846 ns/op [Average]
  (min, avg, max) = (234,566, 238,018, 240,338), stdev = 1,636
  CI (99.9%): [236,173, 239,864] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 62,24% complete, ETA 00:37:11
# Fork: 1 of 2
# Warmup Iteration   1: 246,980 ns/op
# Warmup Iteration   2: 235,190 ns/op
# Warmup Iteration   3: 234,685 ns/op
Iteration   1: 234,949 ns/op
Iteration   2: 236,506 ns/op
Iteration   3: 235,671 ns/op
Iteration   4: 234,762 ns/op
Iteration   5: 234,192 ns/op
Iteration   6: 234,469 ns/op
Iteration   7: 236,262 ns/op

# Run progress: 62,76% complete, ETA 00:36:41
# Fork: 2 of 2
# Warmup Iteration   1: 245,202 ns/op
# Warmup Iteration   2: 235,082 ns/op
# Warmup Iteration   3: 235,819 ns/op
Iteration   1: 235,782 ns/op
Iteration   2: 235,039 ns/op
Iteration   3: 234,519 ns/op
Iteration   4: 232,970 ns/op
Iteration   5: 234,289 ns/op
Iteration   6: 235,133 ns/op
Iteration   7: 235,453 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sInterpolator":
  235,000 ±(99.9%) 1,038 ns/op [Average]
  (min, avg, max) = (232,970, 235,000, 236,506), stdev = 0,920
  CI (99.9%): [233,962, 236,037] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = Tiny)

# Run progress: 63,27% complete, ETA 00:36:11
# Fork: 1 of 2
# Warmup Iteration   1: 45,398 ns/op
# Warmup Iteration   2: 42,218 ns/op
# Warmup Iteration   3: 40,440 ns/op
Iteration   1: 40,541 ns/op
Iteration   2: 40,402 ns/op
Iteration   3: 40,627 ns/op
Iteration   4: 40,403 ns/op
Iteration   5: 40,502 ns/op
Iteration   6: 40,525 ns/op
Iteration   7: 40,647 ns/op

# Run progress: 63,78% complete, ETA 00:35:41
# Fork: 2 of 2
# Warmup Iteration   1: 45,621 ns/op
# Warmup Iteration   2: 42,958 ns/op
# Warmup Iteration   3: 42,383 ns/op
Iteration   1: 42,483 ns/op
Iteration   2: 42,281 ns/op
Iteration   3: 42,504 ns/op
Iteration   4: 42,364 ns/op
Iteration   5: 42,508 ns/op
Iteration   6: 42,453 ns/op
Iteration   7: 42,581 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  41,487 ±(99.9%) 1,136 ns/op [Average]
  (min, avg, max) = (40,402, 41,487, 42,581), stdev = 1,007
  CI (99.9%): [40,351, 42,623] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = VeryShort)

# Run progress: 64,29% complete, ETA 00:35:11
# Fork: 1 of 2
# Warmup Iteration   1: 63,451 ns/op
# Warmup Iteration   2: 61,686 ns/op
# Warmup Iteration   3: 60,185 ns/op
Iteration   1: 60,440 ns/op
Iteration   2: 60,528 ns/op
Iteration   3: 60,605 ns/op
Iteration   4: 60,484 ns/op
Iteration   5: 60,637 ns/op
Iteration   6: 60,614 ns/op
Iteration   7: 60,908 ns/op

# Run progress: 64,80% complete, ETA 00:34:41
# Fork: 2 of 2
# Warmup Iteration   1: 63,095 ns/op
# Warmup Iteration   2: 61,868 ns/op
# Warmup Iteration   3: 60,509 ns/op
Iteration   1: 60,855 ns/op
Iteration   2: 60,881 ns/op
Iteration   3: 60,941 ns/op
Iteration   4: 60,557 ns/op
Iteration   5: 60,978 ns/op
Iteration   6: 60,808 ns/op
Iteration   7: 60,818 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  60,718 ±(99.9%) 0,208 ns/op [Average]
  (min, avg, max) = (60,440, 60,718, 60,978), stdev = 0,184
  CI (99.9%): [60,511, 60,926] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = Short)

# Run progress: 65,31% complete, ETA 00:34:10
# Fork: 1 of 2
# Warmup Iteration   1: 78,395 ns/op
# Warmup Iteration   2: 66,608 ns/op
# Warmup Iteration   3: 65,635 ns/op
Iteration   1: 65,876 ns/op
Iteration   2: 65,391 ns/op
Iteration   3: 65,643 ns/op
Iteration   4: 65,312 ns/op
Iteration   5: 65,754 ns/op
Iteration   6: 65,379 ns/op
Iteration   7: 65,892 ns/op

# Run progress: 65,82% complete, ETA 00:33:40
# Fork: 2 of 2
# Warmup Iteration   1: 80,666 ns/op
# Warmup Iteration   2: 64,189 ns/op
# Warmup Iteration   3: 63,725 ns/op
Iteration   1: 63,519 ns/op
Iteration   2: 63,340 ns/op
Iteration   3: 63,875 ns/op
Iteration   4: 63,780 ns/op
Iteration   5: 63,733 ns/op
Iteration   6: 63,549 ns/op
Iteration   7: 63,473 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  64,608 ±(99.9%) 1,193 ns/op [Average]
  (min, avg, max) = (63,340, 64,608, 65,892), stdev = 1,057
  CI (99.9%): [63,416, 65,801] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = Medium)

# Run progress: 66,33% complete, ETA 00:33:10
# Fork: 1 of 2
# Warmup Iteration   1: 86,435 ns/op
# Warmup Iteration   2: 71,759 ns/op
# Warmup Iteration   3: 70,795 ns/op
Iteration   1: 70,426 ns/op
Iteration   2: 71,005 ns/op
Iteration   3: 71,145 ns/op
Iteration   4: 71,075 ns/op
Iteration   5: 71,084 ns/op
Iteration   6: 70,601 ns/op
Iteration   7: 70,923 ns/op

# Run progress: 66,84% complete, ETA 00:32:40
# Fork: 2 of 2
# Warmup Iteration   1: 86,900 ns/op
# Warmup Iteration   2: 72,051 ns/op
# Warmup Iteration   3: 70,940 ns/op
Iteration   1: 71,112 ns/op
Iteration   2: 71,236 ns/op
Iteration   3: 70,362 ns/op
Iteration   4: 70,542 ns/op
Iteration   5: 70,594 ns/op
Iteration   6: 70,693 ns/op
Iteration   7: 70,566 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  70,812 ±(99.9%) 0,338 ns/op [Average]
  (min, avg, max) = (70,362, 70,812, 71,236), stdev = 0,299
  CI (99.9%): [70,474, 71,149] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = Long)

# Run progress: 67,35% complete, ETA 00:32:10
# Fork: 1 of 2
# Warmup Iteration   1: 122,701 ns/op
# Warmup Iteration   2: 103,563 ns/op
# Warmup Iteration   3: 102,884 ns/op
Iteration   1: 102,384 ns/op
Iteration   2: 102,401 ns/op
Iteration   3: 102,558 ns/op
Iteration   4: 102,566 ns/op
Iteration   5: 102,740 ns/op
Iteration   6: 102,427 ns/op
Iteration   7: 102,838 ns/op

# Run progress: 67,86% complete, ETA 00:31:40
# Fork: 2 of 2
# Warmup Iteration   1: 122,858 ns/op
# Warmup Iteration   2: 115,743 ns/op
# Warmup Iteration   3: 114,755 ns/op
Iteration   1: 114,778 ns/op
Iteration   2: 114,798 ns/op
Iteration   3: 114,872 ns/op
Iteration   4: 114,697 ns/op
Iteration   5: 114,329 ns/op
Iteration   6: 114,507 ns/op
Iteration   7: 114,730 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  108,616 ±(99.9%) 7,093 ns/op [Average]
  (min, avg, max) = (102,384, 108,616, 114,872), stdev = 6,288
  CI (99.9%): [101,523, 115,709] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = VeryLong)

# Run progress: 68,37% complete, ETA 00:31:09
# Fork: 1 of 2
# Warmup Iteration   1: 251,014 ns/op
# Warmup Iteration   2: 239,446 ns/op
# Warmup Iteration   3: 238,376 ns/op
Iteration   1: 236,616 ns/op
Iteration   2: 236,651 ns/op
Iteration   3: 236,055 ns/op
Iteration   4: 235,874 ns/op
Iteration   5: 237,989 ns/op
Iteration   6: 239,164 ns/op
Iteration   7: 237,205 ns/op

# Run progress: 68,88% complete, ETA 00:30:39
# Fork: 2 of 2
# Warmup Iteration   1: 253,067 ns/op
# Warmup Iteration   2: 241,903 ns/op
# Warmup Iteration   3: 236,557 ns/op
Iteration   1: 235,393 ns/op
Iteration   2: 240,113 ns/op
Iteration   3: 239,424 ns/op
Iteration   4: 237,053 ns/op
Iteration   5: 237,089 ns/op
Iteration   6: 238,363 ns/op
Iteration   7: 241,028 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  237,716 ±(99.9%) 1,908 ns/op [Average]
  (min, avg, max) = (235,393, 237,716, 241,028), stdev = 1,692
  CI (99.9%): [235,807, 239,624] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 69,39% complete, ETA 00:30:09
# Fork: 1 of 2
# Warmup Iteration   1: 247,150 ns/op
# Warmup Iteration   2: 237,808 ns/op
# Warmup Iteration   3: 235,692 ns/op
Iteration   1: 236,247 ns/op
Iteration   2: 235,199 ns/op
Iteration   3: 235,901 ns/op
Iteration   4: 236,769 ns/op
Iteration   5: 236,385 ns/op
Iteration   6: 235,348 ns/op
Iteration   7: 235,207 ns/op

# Run progress: 69,90% complete, ETA 00:29:39
# Fork: 2 of 2
# Warmup Iteration   1: 248,856 ns/op
# Warmup Iteration   2: 235,435 ns/op
# Warmup Iteration   3: 233,735 ns/op
Iteration   1: 234,871 ns/op
Iteration   2: 233,434 ns/op
Iteration   3: 233,295 ns/op
Iteration   4: 232,262 ns/op
Iteration   5: 233,432 ns/op
Iteration   6: 233,343 ns/op
Iteration   7: 233,461 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.scalaConcat":
  234,654 ±(99.9%) 1,607 ns/op [Average]
  (min, avg, max) = (232,262, 234,654, 236,769), stdev = 1,425
  CI (99.9%): [233,047, 236,261] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = Tiny)

# Run progress: 70,41% complete, ETA 00:29:09
# Fork: 1 of 2
# Warmup Iteration   1: 24,910 ns/op
# Warmup Iteration   2: 24,233 ns/op
# Warmup Iteration   3: 23,425 ns/op
Iteration   1: 23,350 ns/op
Iteration   2: 23,322 ns/op
Iteration   3: 23,351 ns/op
Iteration   4: 23,314 ns/op
Iteration   5: 23,286 ns/op
Iteration   6: 23,314 ns/op
Iteration   7: 23,295 ns/op

# Run progress: 70,92% complete, ETA 00:28:39
# Fork: 2 of 2
# Warmup Iteration   1: 24,736 ns/op
# Warmup Iteration   2: 24,031 ns/op
# Warmup Iteration   3: 23,796 ns/op
Iteration   1: 23,942 ns/op
Iteration   2: 23,779 ns/op
Iteration   3: 23,756 ns/op
Iteration   4: 23,705 ns/op
Iteration   5: 23,747 ns/op
Iteration   6: 23,723 ns/op
Iteration   7: 23,771 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  23,547 ±(99.9%) 0,274 ns/op [Average]
  (min, avg, max) = (23,286, 23,547, 23,942), stdev = 0,243
  CI (99.9%): [23,273, 23,821] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = VeryShort)

# Run progress: 71,43% complete, ETA 00:28:08
# Fork: 1 of 2
# Warmup Iteration   1: 24,959 ns/op
# Warmup Iteration   2: 24,360 ns/op
# Warmup Iteration   3: 23,256 ns/op
Iteration   1: 23,288 ns/op
Iteration   2: 23,225 ns/op
Iteration   3: 23,220 ns/op
Iteration   4: 23,248 ns/op
Iteration   5: 23,331 ns/op
Iteration   6: 23,375 ns/op
Iteration   7: 23,230 ns/op

# Run progress: 71,94% complete, ETA 00:27:38
# Fork: 2 of 2
# Warmup Iteration   1: 25,236 ns/op
# Warmup Iteration   2: 24,730 ns/op
# Warmup Iteration   3: 23,551 ns/op
Iteration   1: 23,423 ns/op
Iteration   2: 23,327 ns/op
Iteration   3: 23,306 ns/op
Iteration   4: 23,335 ns/op
Iteration   5: 23,361 ns/op
Iteration   6: 23,436 ns/op
Iteration   7: 23,446 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  23,325 ±(99.9%) 0,088 ns/op [Average]
  (min, avg, max) = (23,220, 23,325, 23,446), stdev = 0,078
  CI (99.9%): [23,237, 23,413] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = Short)

# Run progress: 72,45% complete, ETA 00:27:08
# Fork: 1 of 2
# Warmup Iteration   1: 28,347 ns/op
# Warmup Iteration   2: 27,564 ns/op
# Warmup Iteration   3: 26,848 ns/op
Iteration   1: 26,845 ns/op
Iteration   2: 26,901 ns/op
Iteration   3: 26,878 ns/op
Iteration   4: 26,855 ns/op
Iteration   5: 26,880 ns/op
Iteration   6: 26,984 ns/op
Iteration   7: 27,057 ns/op

# Run progress: 72,96% complete, ETA 00:26:38
# Fork: 2 of 2
# Warmup Iteration   1: 28,517 ns/op
# Warmup Iteration   2: 27,604 ns/op
# Warmup Iteration   3: 27,055 ns/op
Iteration   1: 27,197 ns/op
Iteration   2: 27,002 ns/op
Iteration   3: 26,999 ns/op
Iteration   4: 26,993 ns/op
Iteration   5: 27,238 ns/op
Iteration   6: 26,951 ns/op
Iteration   7: 27,112 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  26,992 ±(99.9%) 0,139 ns/op [Average]
  (min, avg, max) = (26,845, 26,992, 27,238), stdev = 0,123
  CI (99.9%): [26,853, 27,131] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = Medium)

# Run progress: 73,47% complete, ETA 00:26:08
# Fork: 1 of 2
# Warmup Iteration   1: 32,237 ns/op
# Warmup Iteration   2: 31,411 ns/op
# Warmup Iteration   3: 30,313 ns/op
Iteration   1: 30,328 ns/op
Iteration   2: 30,414 ns/op
Iteration   3: 30,227 ns/op
Iteration   4: 30,442 ns/op
Iteration   5: 30,402 ns/op
Iteration   6: 30,226 ns/op
Iteration   7: 30,112 ns/op

# Run progress: 73,98% complete, ETA 00:25:38
# Fork: 2 of 2
# Warmup Iteration   1: 32,291 ns/op
# Warmup Iteration   2: 31,146 ns/op
# Warmup Iteration   3: 30,301 ns/op
Iteration   1: 30,204 ns/op
Iteration   2: 30,285 ns/op
Iteration   3: 30,521 ns/op
Iteration   4: 30,331 ns/op
Iteration   5: 30,095 ns/op
Iteration   6: 30,110 ns/op
Iteration   7: 30,116 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  30,272 ±(99.9%) 0,157 ns/op [Average]
  (min, avg, max) = (30,095, 30,272, 30,521), stdev = 0,139
  CI (99.9%): [30,116, 30,429] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = Long)

# Run progress: 74,49% complete, ETA 00:25:08
# Fork: 1 of 2
# Warmup Iteration   1: 37,780 ns/op
# Warmup Iteration   2: 36,033 ns/op
# Warmup Iteration   3: 35,259 ns/op
Iteration   1: 35,321 ns/op
Iteration   2: 35,641 ns/op
Iteration   3: 35,440 ns/op
Iteration   4: 35,399 ns/op
Iteration   5: 35,420 ns/op
Iteration   6: 35,463 ns/op
Iteration   7: 35,344 ns/op

# Run progress: 75,00% complete, ETA 00:24:37
# Fork: 2 of 2
# Warmup Iteration   1: 37,801 ns/op
# Warmup Iteration   2: 36,072 ns/op
# Warmup Iteration   3: 35,297 ns/op
Iteration   1: 35,262 ns/op
Iteration   2: 35,162 ns/op
Iteration   3: 35,537 ns/op
Iteration   4: 35,257 ns/op
Iteration   5: 35,373 ns/op
Iteration   6: 35,335 ns/op
Iteration   7: 35,308 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  35,376 ±(99.9%) 0,138 ns/op [Average]
  (min, avg, max) = (35,162, 35,376, 35,641), stdev = 0,122
  CI (99.9%): [35,238, 35,514] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = VeryLong)

# Run progress: 75,51% complete, ETA 00:24:07
# Fork: 1 of 2
# Warmup Iteration   1: 87,547 ns/op
# Warmup Iteration   2: 83,592 ns/op
# Warmup Iteration   3: 84,092 ns/op
Iteration   1: 83,389 ns/op
Iteration   2: 83,296 ns/op
Iteration   3: 82,113 ns/op
Iteration   4: 83,059 ns/op
Iteration   5: 83,776 ns/op
Iteration   6: 82,809 ns/op
Iteration   7: 83,250 ns/op

# Run progress: 76,02% complete, ETA 00:23:37
# Fork: 2 of 2
# Warmup Iteration   1: 88,414 ns/op
# Warmup Iteration   2: 83,352 ns/op
# Warmup Iteration   3: 83,616 ns/op
Iteration   1: 84,242 ns/op
Iteration   2: 82,556 ns/op
Iteration   3: 83,073 ns/op
Iteration   4: 83,800 ns/op
Iteration   5: 83,631 ns/op
Iteration   6: 83,034 ns/op
Iteration   7: 83,787 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  83,272 ±(99.9%) 0,633 ns/op [Average]
  (min, avg, max) = (82,113, 83,272, 84,242), stdev = 0,561
  CI (99.9%): [82,639, 83,906] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 76,53% complete, ETA 00:23:07
# Fork: 1 of 2
# Warmup Iteration   1: 88,778 ns/op
# Warmup Iteration   2: 83,463 ns/op
# Warmup Iteration   3: 83,037 ns/op
Iteration   1: 83,455 ns/op
Iteration   2: 83,357 ns/op
Iteration   3: 83,219 ns/op
Iteration   4: 83,688 ns/op
Iteration   5: 82,595 ns/op
Iteration   6: 82,705 ns/op
Iteration   7: 83,667 ns/op

# Run progress: 77,04% complete, ETA 00:22:37
# Fork: 2 of 2
# Warmup Iteration   1: 88,479 ns/op
# Warmup Iteration   2: 83,922 ns/op
# Warmup Iteration   3: 84,025 ns/op
Iteration   1: 84,177 ns/op
Iteration   2: 83,871 ns/op
Iteration   3: 83,253 ns/op
Iteration   4: 83,353 ns/op
Iteration   5: 83,531 ns/op
Iteration   6: 83,549 ns/op
Iteration   7: 83,491 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.sfiInterpolator":
  83,422 ±(99.9%) 0,465 ns/op [Average]
  (min, avg, max) = (82,595, 83,422, 84,177), stdev = 0,413
  CI (99.9%): [82,957, 83,888] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = Tiny)

# Run progress: 77,55% complete, ETA 00:22:07
# Fork: 1 of 2
# Warmup Iteration   1: 125,152 ns/op
# Warmup Iteration   2: 119,622 ns/op
# Warmup Iteration   3: 121,153 ns/op
Iteration   1: 121,245 ns/op
Iteration   2: 121,282 ns/op
Iteration   3: 121,756 ns/op
Iteration   4: 121,310 ns/op
Iteration   5: 121,405 ns/op
Iteration   6: 121,764 ns/op
Iteration   7: 121,072 ns/op

# Run progress: 78,06% complete, ETA 00:21:36
# Fork: 2 of 2
# Warmup Iteration   1: 124,903 ns/op
# Warmup Iteration   2: 120,795 ns/op
# Warmup Iteration   3: 119,007 ns/op
Iteration   1: 119,254 ns/op
Iteration   2: 118,803 ns/op
Iteration   3: 118,933 ns/op
Iteration   4: 118,857 ns/op
Iteration   5: 119,569 ns/op
Iteration   6: 119,193 ns/op
Iteration   7: 119,264 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  120,265 ±(99.9%) 1,366 ns/op [Average]
  (min, avg, max) = (118,803, 120,265, 121,764), stdev = 1,211
  CI (99.9%): [118,899, 121,631] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = VeryShort)

# Run progress: 78,57% complete, ETA 00:21:06
# Fork: 1 of 2
# Warmup Iteration   1: 129,717 ns/op
# Warmup Iteration   2: 125,973 ns/op
# Warmup Iteration   3: 124,703 ns/op
Iteration   1: 125,591 ns/op
Iteration   2: 124,632 ns/op
Iteration   3: 125,064 ns/op
Iteration   4: 124,917 ns/op
Iteration   5: 125,428 ns/op
Iteration   6: 125,231 ns/op
Iteration   7: 125,675 ns/op

# Run progress: 79,08% complete, ETA 00:20:36
# Fork: 2 of 2
# Warmup Iteration   1: 134,315 ns/op
# Warmup Iteration   2: 129,698 ns/op
# Warmup Iteration   3: 127,761 ns/op
Iteration   1: 128,253 ns/op
Iteration   2: 127,719 ns/op
Iteration   3: 128,011 ns/op
Iteration   4: 128,779 ns/op
Iteration   5: 128,405 ns/op
Iteration   6: 128,009 ns/op
Iteration   7: 128,493 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  126,729 ±(99.9%) 1,811 ns/op [Average]
  (min, avg, max) = (124,632, 126,729, 128,779), stdev = 1,605
  CI (99.9%): [124,918, 128,540] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = Short)

# Run progress: 79,59% complete, ETA 00:20:06
# Fork: 1 of 2
# Warmup Iteration   1: 124,547 ns/op
# Warmup Iteration   2: 120,570 ns/op
# Warmup Iteration   3: 119,651 ns/op
Iteration   1: 119,845 ns/op
Iteration   2: 120,151 ns/op
Iteration   3: 120,277 ns/op
Iteration   4: 120,433 ns/op
Iteration   5: 120,101 ns/op
Iteration   6: 119,733 ns/op
Iteration   7: 119,763 ns/op

# Run progress: 80,10% complete, ETA 00:19:36
# Fork: 2 of 2
# Warmup Iteration   1: 138,400 ns/op
# Warmup Iteration   2: 133,489 ns/op
# Warmup Iteration   3: 131,018 ns/op
Iteration   1: 132,393 ns/op
Iteration   2: 131,608 ns/op
Iteration   3: 131,842 ns/op
Iteration   4: 130,821 ns/op
Iteration   5: 130,913 ns/op
Iteration   6: 130,848 ns/op
Iteration   7: 131,078 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  125,700 ±(99.9%) 6,642 ns/op [Average]
  (min, avg, max) = (119,733, 125,700, 132,393), stdev = 5,888
  CI (99.9%): [119,058, 132,342] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = Medium)

# Run progress: 80,61% complete, ETA 00:19:06
# Fork: 1 of 2
# Warmup Iteration   1: 166,508 ns/op
# Warmup Iteration   2: 159,161 ns/op
# Warmup Iteration   3: 158,503 ns/op
Iteration   1: 158,530 ns/op
Iteration   2: 158,682 ns/op
Iteration   3: 158,441 ns/op
Iteration   4: 158,379 ns/op
Iteration   5: 158,414 ns/op
Iteration   6: 158,006 ns/op
Iteration   7: 158,645 ns/op

# Run progress: 81,12% complete, ETA 00:18:35
# Fork: 2 of 2
# Warmup Iteration   1: 168,602 ns/op
# Warmup Iteration   2: 161,636 ns/op
# Warmup Iteration   3: 159,877 ns/op
Iteration   1: 160,298 ns/op
Iteration   2: 160,567 ns/op
Iteration   3: 160,640 ns/op
Iteration   4: 160,737 ns/op
Iteration   5: 159,522 ns/op
Iteration   6: 159,822 ns/op
Iteration   7: 160,609 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  159,378 ±(99.9%) 1,165 ns/op [Average]
  (min, avg, max) = (158,006, 159,378, 160,737), stdev = 1,033
  CI (99.9%): [158,213, 160,543] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = Long)

# Run progress: 81,63% complete, ETA 00:18:05
# Fork: 1 of 2
# Warmup Iteration   1: 195,300 ns/op
# Warmup Iteration   2: 184,558 ns/op
# Warmup Iteration   3: 185,208 ns/op
Iteration   1: 185,990 ns/op
Iteration   2: 184,628 ns/op
Iteration   3: 184,735 ns/op
Iteration   4: 187,557 ns/op
Iteration   5: 186,970 ns/op
Iteration   6: 186,181 ns/op
Iteration   7: 186,475 ns/op

# Run progress: 82,14% complete, ETA 00:17:35
# Fork: 2 of 2
# Warmup Iteration   1: 198,399 ns/op
# Warmup Iteration   2: 189,936 ns/op
# Warmup Iteration   3: 189,500 ns/op
Iteration   1: 189,044 ns/op
Iteration   2: 190,160 ns/op
Iteration   3: 188,747 ns/op
Iteration   4: 189,111 ns/op
Iteration   5: 188,869 ns/op
Iteration   6: 189,426 ns/op
Iteration   7: 188,530 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  187,602 ±(99.9%) 2,012 ns/op [Average]
  (min, avg, max) = (184,628, 187,602, 190,160), stdev = 1,784
  CI (99.9%): [185,590, 189,614] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = VeryLong)

# Run progress: 82,65% complete, ETA 00:17:05
# Fork: 1 of 2
# Warmup Iteration   1: 330,710 ns/op
# Warmup Iteration   2: 316,368 ns/op
# Warmup Iteration   3: 317,223 ns/op
Iteration   1: 316,491 ns/op
Iteration   2: 316,378 ns/op
Iteration   3: 315,403 ns/op
Iteration   4: 316,836 ns/op
Iteration   5: 317,993 ns/op
Iteration   6: 318,649 ns/op
Iteration   7: 315,988 ns/op

# Run progress: 83,16% complete, ETA 00:16:35
# Fork: 2 of 2
# Warmup Iteration   1: 336,656 ns/op
# Warmup Iteration   2: 315,232 ns/op
# Warmup Iteration   3: 316,547 ns/op
Iteration   1: 315,438 ns/op
Iteration   2: 317,527 ns/op
Iteration   3: 318,196 ns/op
Iteration   4: 318,691 ns/op
Iteration   5: 313,022 ns/op
Iteration   6: 314,981 ns/op
Iteration   7: 313,813 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  316,386 ±(99.9%) 1,972 ns/op [Average]
  (min, avg, max) = (313,022, 316,386, 318,691), stdev = 1,749
  CI (99.9%): [314,414, 318,359] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 83,67% complete, ETA 00:16:05
# Fork: 1 of 2
# Warmup Iteration   1: 333,406 ns/op
# Warmup Iteration   2: 314,978 ns/op
# Warmup Iteration   3: 323,673 ns/op
Iteration   1: 319,187 ns/op
Iteration   2: 320,200 ns/op
Iteration   3: 319,160 ns/op
Iteration   4: 317,704 ns/op
Iteration   5: 322,101 ns/op
Iteration   6: 321,550 ns/op
Iteration   7: 320,224 ns/op

# Run progress: 84,18% complete, ETA 00:15:34
# Fork: 2 of 2
# Warmup Iteration   1: 335,587 ns/op
# Warmup Iteration   2: 314,448 ns/op
# Warmup Iteration   3: 318,101 ns/op
Iteration   1: 320,265 ns/op
Iteration   2: 319,321 ns/op
Iteration   3: 318,736 ns/op
Iteration   4: 320,359 ns/op
Iteration   5: 321,117 ns/op
Iteration   6: 320,749 ns/op
Iteration   7: 321,707 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.slf4j":
  320,170 ±(99.9%) 1,403 ns/op [Average]
  (min, avg, max) = (317,704, 320,170, 322,101), stdev = 1,244
  CI (99.9%): [318,767, 321,573] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = Tiny)

# Run progress: 84,69% complete, ETA 00:15:04
# Fork: 1 of 2
# Warmup Iteration   1: 1092,339 ns/op
# Warmup Iteration   2: 939,777 ns/op
# Warmup Iteration   3: 942,083 ns/op
Iteration   1: 939,785 ns/op
Iteration   2: 946,717 ns/op
Iteration   3: 943,107 ns/op
Iteration   4: 950,026 ns/op
Iteration   5: 944,015 ns/op
Iteration   6: 946,867 ns/op
Iteration   7: 941,564 ns/op

# Run progress: 85,20% complete, ETA 00:14:34
# Fork: 2 of 2
# Warmup Iteration   1: 1131,821 ns/op
# Warmup Iteration   2: 985,257 ns/op
# Warmup Iteration   3: 982,311 ns/op
Iteration   1: 975,917 ns/op
Iteration   2: 979,642 ns/op
Iteration   3: 973,145 ns/op
Iteration   4: 978,575 ns/op
Iteration   5: 983,890 ns/op
Iteration   6: 973,615 ns/op
Iteration   7: 977,677 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  961,039 ±(99.9%) 19,659 ns/op [Average]
  (min, avg, max) = (939,785, 961,039, 983,890), stdev = 17,427
  CI (99.9%): [941,380, 980,698] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = VeryShort)

# Run progress: 85,71% complete, ETA 00:14:04
# Fork: 1 of 2
# Warmup Iteration   1: 1139,896 ns/op
# Warmup Iteration   2: 999,461 ns/op
# Warmup Iteration   3: 992,910 ns/op
Iteration   1: 996,660 ns/op
Iteration   2: 990,084 ns/op
Iteration   3: 991,668 ns/op
Iteration   4: 991,249 ns/op
Iteration   5: 992,075 ns/op
Iteration   6: 992,459 ns/op
Iteration   7: 992,516 ns/op

# Run progress: 86,22% complete, ETA 00:13:34
# Fork: 2 of 2
# Warmup Iteration   1: 1163,460 ns/op
# Warmup Iteration   2: 995,002 ns/op
# Warmup Iteration   3: 992,633 ns/op
Iteration   1: 997,864 ns/op
Iteration   2: 994,313 ns/op
Iteration   3: 998,266 ns/op
Iteration   4: 991,902 ns/op
Iteration   5: 992,563 ns/op
Iteration   6: 996,414 ns/op
Iteration   7: 997,321 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  993,954 ±(99.9%) 3,132 ns/op [Average]
  (min, avg, max) = (990,084, 993,954, 998,266), stdev = 2,777
  CI (99.9%): [990,822, 997,086] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = Short)

# Run progress: 86,73% complete, ETA 00:13:04
# Fork: 1 of 2
# Warmup Iteration   1: 1180,765 ns/op
# Warmup Iteration   2: 1010,409 ns/op
# Warmup Iteration   3: 1002,356 ns/op
Iteration   1: 1004,552 ns/op
Iteration   2: 1003,569 ns/op
Iteration   3: 1006,048 ns/op
Iteration   4: 1001,951 ns/op
Iteration   5: 1003,062 ns/op
Iteration   6: 1002,184 ns/op
Iteration   7: 1004,966 ns/op

# Run progress: 87,24% complete, ETA 00:12:34
# Fork: 2 of 2
# Warmup Iteration   1: 1157,925 ns/op
# Warmup Iteration   2: 1001,997 ns/op
# Warmup Iteration   3: 996,316 ns/op
Iteration   1: 1003,636 ns/op
Iteration   2: 997,165 ns/op
Iteration   3: 1005,416 ns/op
Iteration   4: 998,262 ns/op
Iteration   5: 996,374 ns/op
Iteration   6: 1002,950 ns/op
Iteration   7: 1004,772 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  1002,493 ±(99.9%) 3,482 ns/op [Average]
  (min, avg, max) = (996,374, 1002,493, 1006,048), stdev = 3,087
  CI (99.9%): [999,011, 1005,975] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = Medium)

# Run progress: 87,76% complete, ETA 00:12:03
# Fork: 1 of 2
# Warmup Iteration   1: 1167,085 ns/op
# Warmup Iteration   2: 1037,999 ns/op
# Warmup Iteration   3: 1033,525 ns/op
Iteration   1: 1036,492 ns/op
Iteration   2: 1031,240 ns/op
Iteration   3: 1037,681 ns/op
Iteration   4: 1027,262 ns/op
Iteration   5: 1033,866 ns/op
Iteration   6: 1025,364 ns/op
Iteration   7: 1027,417 ns/op

# Run progress: 88,27% complete, ETA 00:11:33
# Fork: 2 of 2
# Warmup Iteration   1: 1174,031 ns/op
# Warmup Iteration   2: 1039,050 ns/op
# Warmup Iteration   3: 1033,555 ns/op
Iteration   1: 1039,885 ns/op
Iteration   2: 1032,092 ns/op
Iteration   3: 1040,807 ns/op
Iteration   4: 1034,314 ns/op
Iteration   5: 1038,842 ns/op
Iteration   6: 1033,371 ns/op
Iteration   7: 1036,370 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  1033,929 ±(99.9%) 5,462 ns/op [Average]
  (min, avg, max) = (1025,364, 1033,929, 1040,807), stdev = 4,842
  CI (99.9%): [1028,467, 1039,391] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = Long)

# Run progress: 88,78% complete, ETA 00:11:03
# Fork: 1 of 2
# Warmup Iteration   1: 1227,394 ns/op
# Warmup Iteration   2: 1094,472 ns/op
# Warmup Iteration   3: 1091,944 ns/op
Iteration   1: 1094,894 ns/op
Iteration   2: 1091,393 ns/op
Iteration   3: 1090,720 ns/op
Iteration   4: 1086,990 ns/op
Iteration   5: 1092,122 ns/op
Iteration   6: 1091,131 ns/op
Iteration   7: 1092,651 ns/op

# Run progress: 89,29% complete, ETA 00:10:33
# Fork: 2 of 2
# Warmup Iteration   1: 1235,874 ns/op
# Warmup Iteration   2: 1077,979 ns/op
# Warmup Iteration   3: 1071,796 ns/op
Iteration   1: 1076,651 ns/op
Iteration   2: 1077,684 ns/op
Iteration   3: 1082,342 ns/op
Iteration   4: 1073,126 ns/op
Iteration   5: 1083,414 ns/op
Iteration   6: 1076,560 ns/op
Iteration   7: 1084,422 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  1085,293 ±(99.9%) 8,077 ns/op [Average]
  (min, avg, max) = (1073,126, 1085,293, 1094,894), stdev = 7,160
  CI (99.9%): [1077,216, 1093,370] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = VeryLong)

# Run progress: 89,80% complete, ETA 00:10:03
# Fork: 1 of 2
# Warmup Iteration   1: 1343,541 ns/op
# Warmup Iteration   2: 1170,301 ns/op
# Warmup Iteration   3: 1166,974 ns/op
Iteration   1: 1165,495 ns/op
Iteration   2: 1168,125 ns/op
Iteration   3: 1176,148 ns/op
Iteration   4: 1168,500 ns/op
Iteration   5: 1166,918 ns/op
Iteration   6: 1171,905 ns/op
Iteration   7: 1169,145 ns/op

# Run progress: 90,31% complete, ETA 00:09:33
# Fork: 2 of 2
# Warmup Iteration   1: 1382,343 ns/op
# Warmup Iteration   2: 1195,988 ns/op
# Warmup Iteration   3: 1191,575 ns/op
Iteration   1: 1184,175 ns/op
Iteration   2: 1182,229 ns/op
Iteration   3: 1196,973 ns/op
Iteration   4: 1188,357 ns/op
Iteration   5: 1191,167 ns/op
Iteration   6: 1178,140 ns/op
Iteration   7: 1210,728 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  1179,857 ±(99.9%) 15,022 ns/op [Average]
  (min, avg, max) = (1165,495, 1179,857, 1210,728), stdev = 13,317
  CI (99.9%): [1164,835, 1194,880] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat
# Parameters: (arg = VeryLongSizeMiss)

# Run progress: 90,82% complete, ETA 00:09:02
# Fork: 1 of 2
# Warmup Iteration   1: 1313,039 ns/op
# Warmup Iteration   2: 1147,083 ns/op
# Warmup Iteration   3: 1149,918 ns/op
Iteration   1: 1215,463 ns/op
Iteration   2: 1147,819 ns/op
Iteration   3: 1140,798 ns/op
Iteration   4: 1144,692 ns/op
Iteration   5: 1149,830 ns/op
Iteration   6: 1139,993 ns/op
Iteration   7: 1136,091 ns/op

# Run progress: 91,33% complete, ETA 00:08:32
# Fork: 2 of 2
# Warmup Iteration   1: 1340,388 ns/op
# Warmup Iteration   2: 1174,417 ns/op
# Warmup Iteration   3: 1169,123 ns/op
Iteration   1: 1164,914 ns/op
Iteration   2: 1165,401 ns/op
Iteration   3: 1163,953 ns/op
Iteration   4: 1175,404 ns/op
Iteration   5: 1185,809 ns/op
Iteration   6: 1172,189 ns/op
Iteration   7: 1160,330 ns/op


Result "com.komanov.stringformat.jmh.ManyParamsBenchmark.stringFormat":
  1161,620 ±(99.9%) 24,209 ns/op [Average]
  (min, avg, max) = (1136,091, 1161,620, 1215,463), stdev = 21,460
  CI (99.9%): [1137,412, 1185,829] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.NewStringBenchmark.baseline

# Run progress: 91,84% complete, ETA 00:08:02
# Fork: 1 of 2
# Warmup Iteration   1: 2,468 ns/op
# Warmup Iteration   2: 2,555 ns/op
# Warmup Iteration   3: 2,161 ns/op
Iteration   1: 2,152 ns/op
Iteration   2: 2,154 ns/op
Iteration   3: 2,152 ns/op
Iteration   4: 2,168 ns/op
Iteration   5: 2,151 ns/op
Iteration   6: 2,156 ns/op
Iteration   7: 2,153 ns/op

# Run progress: 92,35% complete, ETA 00:07:32
# Fork: 2 of 2
# Warmup Iteration   1: 2,469 ns/op
# Warmup Iteration   2: 2,548 ns/op
# Warmup Iteration   3: 2,155 ns/op
Iteration   1: 2,152 ns/op
Iteration   2: 2,155 ns/op
Iteration   3: 2,167 ns/op
Iteration   4: 2,154 ns/op
Iteration   5: 2,157 ns/op
Iteration   6: 2,155 ns/op
Iteration   7: 2,151 ns/op


Result "com.komanov.stringformat.jmh.NewStringBenchmark.baseline":
  2,156 ±(99.9%) 0,006 ns/op [Average]
  (min, avg, max) = (2,151, 2,156, 2,168), stdev = 0,005
  CI (99.9%): [2,150, 2,162] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.NewStringBenchmark.fastSb

# Run progress: 92,86% complete, ETA 00:07:02
# Fork: 1 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
86,369 ns/op
# Warmup Iteration   2: 81,741 ns/op
# Warmup Iteration   3: 81,646 ns/op
Iteration   1: 81,762 ns/op
Iteration   2: 81,535 ns/op
Iteration   3: 81,394 ns/op
Iteration   4: 81,520 ns/op
Iteration   5: 81,168 ns/op
Iteration   6: 81,545 ns/op
Iteration   7: 81,696 ns/op

# Run progress: 93,37% complete, ETA 00:06:32
# Fork: 2 of 2
# Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.komanov.stringformat.FastStringFactory (file:/home/ismael/workspace/scala-string-format/scala-string-format-test/target/benchmarks.jar) to field java.lang.AbstractStringBuilder.value
WARNING: Please consider reporting this to the maintainers of com.komanov.stringformat.FastStringFactory
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
86,382 ns/op
# Warmup Iteration   2: 82,439 ns/op
# Warmup Iteration   3: 81,692 ns/op
Iteration   1: 81,240 ns/op
Iteration   2: 80,656 ns/op
Iteration   3: 80,916 ns/op
Iteration   4: 81,059 ns/op
Iteration   5: 81,285 ns/op
Iteration   6: 81,635 ns/op
Iteration   7: 81,625 ns/op


Result "com.komanov.stringformat.jmh.NewStringBenchmark.fastSb":
  81,360 ±(99.9%) 0,364 ns/op [Average]
  (min, avg, max) = (80,656, 81,360, 81,762), stdev = 0,323
  CI (99.9%): [80,996, 81,724] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.NewStringBenchmark.newString

# Run progress: 93,88% complete, ETA 00:06:01
# Fork: 1 of 2
# Warmup Iteration   1: 81,110 ns/op
# Warmup Iteration   2: 76,858 ns/op
# Warmup Iteration   3: 77,364 ns/op
Iteration   1: 77,080 ns/op
Iteration   2: 76,609 ns/op
Iteration   3: 76,532 ns/op
Iteration   4: 77,074 ns/op
Iteration   5: 77,091 ns/op
Iteration   6: 76,900 ns/op
Iteration   7: 77,121 ns/op

# Run progress: 94,39% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 81,087 ns/op
# Warmup Iteration   2: 77,244 ns/op
# Warmup Iteration   3: 76,678 ns/op
Iteration   1: 76,904 ns/op
Iteration   2: 76,879 ns/op
Iteration   3: 77,801 ns/op
Iteration   4: 76,597 ns/op
Iteration   5: 76,945 ns/op
Iteration   6: 77,052 ns/op
Iteration   7: 76,568 ns/op


Result "com.komanov.stringformat.jmh.NewStringBenchmark.newString":
  76,939 ±(99.9%) 0,368 ns/op [Average]
  (min, avg, max) = (76,532, 76,939, 77,801), stdev = 0,326
  CI (99.9%): [76,571, 77,308] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.NewStringBenchmark.sbToString

# Run progress: 94,90% complete, ETA 00:05:01
# Fork: 1 of 2
# Warmup Iteration   1: 83,488 ns/op
# Warmup Iteration   2: 79,143 ns/op
# Warmup Iteration   3: 78,797 ns/op
Iteration   1: 77,843 ns/op
Iteration   2: 77,713 ns/op
Iteration   3: 78,174 ns/op
Iteration   4: 79,937 ns/op
Iteration   5: 78,074 ns/op
Iteration   6: 78,229 ns/op
Iteration   7: 79,155 ns/op

# Run progress: 95,41% complete, ETA 00:04:31
# Fork: 2 of 2
# Warmup Iteration   1: 84,323 ns/op
# Warmup Iteration   2: 79,415 ns/op
# Warmup Iteration   3: 79,892 ns/op
Iteration   1: 78,630 ns/op
Iteration   2: 78,898 ns/op
Iteration   3: 79,338 ns/op
Iteration   4: 79,042 ns/op
Iteration   5: 79,213 ns/op
Iteration   6: 78,797 ns/op
Iteration   7: 78,599 ns/op


Result "com.komanov.stringformat.jmh.NewStringBenchmark.sbToString":
  78,689 ±(99.9%) 0,712 ns/op [Average]
  (min, avg, max) = (77,713, 78,689, 79,937), stdev = 0,632
  CI (99.9%): [77,976, 79,401] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.StringBuilderBenchmark.javaStringBuilder

# Run progress: 95,92% complete, ETA 00:04:01
# Fork: 1 of 2
# Warmup Iteration   1: 7,754 ns/op
# Warmup Iteration   2: 7,484 ns/op
# Warmup Iteration   3: 6,483 ns/op
Iteration   1: 6,550 ns/op
Iteration   2: 6,501 ns/op
Iteration   3: 6,524 ns/op
Iteration   4: 6,509 ns/op
Iteration   5: 6,526 ns/op
Iteration   6: 6,503 ns/op
Iteration   7: 6,540 ns/op

# Run progress: 96,43% complete, ETA 00:03:31
# Fork: 2 of 2
# Warmup Iteration   1: 7,728 ns/op
# Warmup Iteration   2: 7,493 ns/op
# Warmup Iteration   3: 6,493 ns/op
Iteration   1: 6,517 ns/op
Iteration   2: 6,507 ns/op
Iteration   3: 6,502 ns/op
Iteration   4: 6,457 ns/op
Iteration   5: 6,509 ns/op
Iteration   6: 6,510 ns/op
Iteration   7: 6,514 ns/op


Result "com.komanov.stringformat.jmh.StringBuilderBenchmark.javaStringBuilder":
  6,512 ±(99.9%) 0,024 ns/op [Average]
  (min, avg, max) = (6,457, 6,512, 6,550), stdev = 0,021
  CI (99.9%): [6,488, 6,536] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.StringBuilderBenchmark.javaStringBuilder2

# Run progress: 96,94% complete, ETA 00:03:00
# Fork: 1 of 2
# Warmup Iteration   1: 87,652 ns/op
# Warmup Iteration   2: 83,398 ns/op
# Warmup Iteration   3: 81,903 ns/op
Iteration   1: 82,610 ns/op
Iteration   2: 82,559 ns/op
Iteration   3: 82,709 ns/op
Iteration   4: 82,671 ns/op
Iteration   5: 82,463 ns/op
Iteration   6: 82,088 ns/op
Iteration   7: 81,804 ns/op

# Run progress: 97,45% complete, ETA 00:02:30
# Fork: 2 of 2
# Warmup Iteration   1: 86,189 ns/op
# Warmup Iteration   2: 83,071 ns/op
# Warmup Iteration   3: 82,726 ns/op
Iteration   1: 82,972 ns/op
Iteration   2: 82,345 ns/op
Iteration   3: 82,083 ns/op
Iteration   4: 82,093 ns/op
Iteration   5: 82,630 ns/op
Iteration   6: 82,607 ns/op
Iteration   7: 82,987 ns/op


Result "com.komanov.stringformat.jmh.StringBuilderBenchmark.javaStringBuilder2":
  82,473 ±(99.9%) 0,394 ns/op [Average]
  (min, avg, max) = (81,804, 82,473, 82,987), stdev = 0,349
  CI (99.9%): [82,079, 82,867] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.StringBuilderBenchmark.scalaStringBuilder

# Run progress: 97,96% complete, ETA 00:02:00
# Fork: 1 of 2
# Warmup Iteration   1: 19,826 ns/op
# Warmup Iteration   2: 18,741 ns/op
# Warmup Iteration   3: 17,899 ns/op
Iteration   1: 17,980 ns/op
Iteration   2: 17,821 ns/op
Iteration   3: 17,826 ns/op
Iteration   4: 17,918 ns/op
Iteration   5: 17,913 ns/op
Iteration   6: 18,079 ns/op
Iteration   7: 17,880 ns/op

# Run progress: 98,47% complete, ETA 00:01:30
# Fork: 2 of 2
# Warmup Iteration   1: 19,846 ns/op
# Warmup Iteration   2: 18,757 ns/op
# Warmup Iteration   3: 18,047 ns/op
Iteration   1: 18,042 ns/op
Iteration   2: 17,982 ns/op
Iteration   3: 17,986 ns/op
Iteration   4: 18,084 ns/op
Iteration   5: 18,049 ns/op
Iteration   6: 17,994 ns/op
Iteration   7: 18,017 ns/op


Result "com.komanov.stringformat.jmh.StringBuilderBenchmark.scalaStringBuilder":
  17,970 ±(99.9%) 0,097 ns/op [Average]
  (min, avg, max) = (17,821, 17,970, 18,084), stdev = 0,086
  CI (99.9%): [17,872, 18,067] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 14.0.1, OpenJDK 64-Bit Server VM, 14.0.1+7
# VM invoker: /usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/bin/java
# VM options: -Xmx2G
# Warmup: 3 iterations, 3 s each
# Measurement: 7 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.stringformat.jmh.StringBuilderBenchmark.scalaStringBuilder2

# Run progress: 98,98% complete, ETA 00:01:00
# Fork: 1 of 2
# Warmup Iteration   1: 235,121 ns/op
# Warmup Iteration   2: 223,141 ns/op
# Warmup Iteration   3: 222,986 ns/op
Iteration   1: 221,124 ns/op
Iteration   2: 221,072 ns/op
Iteration   3: 221,740 ns/op
Iteration   4: 222,328 ns/op
Iteration   5: 220,782 ns/op
Iteration   6: 222,022 ns/op
Iteration   7: 220,949 ns/op

# Run progress: 99,49% complete, ETA 00:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 235,150 ns/op
# Warmup Iteration   2: 221,832 ns/op
# Warmup Iteration   3: 221,037 ns/op
Iteration   1: 221,969 ns/op
Iteration   2: 222,427 ns/op
Iteration   3: 221,655 ns/op
Iteration   4: 223,149 ns/op
Iteration   5: 220,966 ns/op
Iteration   6: 225,974 ns/op
Iteration   7: 225,321 ns/op


Result "com.komanov.stringformat.jmh.StringBuilderBenchmark.scalaStringBuilder2":
  222,248 ±(99.9%) 1,798 ns/op [Average]
  (min, avg, max) = (220,782, 222,248, 225,974), stdev = 1,594
  CI (99.9%): [220,450, 224,047] (assumes normal distribution)


# Run complete. Total time: 01:38:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              (arg)  Mode  Cnt     Score    Error  Units
ConstStringBenchmark.baseline                            N/A  avgt   14     2,196 ±  0,039  ns/op
ConstStringBenchmark.sInterpolator                       N/A  avgt   14     3,292 ±  1,325  ns/op
ConstStringBenchmark.sfiInterpolator                     N/A  avgt   14     2,156 ±  0,004  ns/op
EmptyStringBenchmark.baseline                            N/A  avgt   14     2,154 ±  0,003  ns/op
EmptyStringBenchmark.sInterpolator                       N/A  avgt   14     2,156 ±  0,005  ns/op
EmptyStringBenchmark.sfiInterpolator                     N/A  avgt   14     2,153 ±  0,002  ns/op
ManyParamsBenchmark.concatOptimized1                    Tiny  avgt   14    32,380 ±  0,333  ns/op
ManyParamsBenchmark.concatOptimized1               VeryShort  avgt   14    30,977 ±  0,405  ns/op
ManyParamsBenchmark.concatOptimized1                   Short  avgt   14    37,872 ±  0,697  ns/op
ManyParamsBenchmark.concatOptimized1                  Medium  avgt   14    47,686 ±  6,641  ns/op
ManyParamsBenchmark.concatOptimized1                    Long  avgt   14    42,642 ±  0,271  ns/op
ManyParamsBenchmark.concatOptimized1                VeryLong  avgt   14    88,509 ±  2,815  ns/op
ManyParamsBenchmark.concatOptimized1        VeryLongSizeMiss  avgt   14    87,382 ±  0,632  ns/op
ManyParamsBenchmark.concatOptimized2                    Tiny  avgt   14    46,160 ±  0,377  ns/op
ManyParamsBenchmark.concatOptimized2               VeryShort  avgt   14    60,843 ±  0,392  ns/op
ManyParamsBenchmark.concatOptimized2                   Short  avgt   14    69,624 ±  6,614  ns/op
ManyParamsBenchmark.concatOptimized2                  Medium  avgt   14    75,828 ±  1,246  ns/op
ManyParamsBenchmark.concatOptimized2                    Long  avgt   14    87,696 ±  0,661  ns/op
ManyParamsBenchmark.concatOptimized2                VeryLong  avgt   14   201,316 ±  0,970  ns/op
ManyParamsBenchmark.concatOptimized2        VeryLongSizeMiss  avgt   14   204,556 ±  1,179  ns/op
ManyParamsBenchmark.concatOptimizedMacros               Tiny  avgt   14    28,112 ±  0,123  ns/op
ManyParamsBenchmark.concatOptimizedMacros          VeryShort  avgt   14    28,273 ±  0,805  ns/op
ManyParamsBenchmark.concatOptimizedMacros              Short  avgt   14    31,725 ±  0,090  ns/op
ManyParamsBenchmark.concatOptimizedMacros             Medium  avgt   14    33,586 ±  0,207  ns/op
ManyParamsBenchmark.concatOptimizedMacros               Long  avgt   14    38,879 ±  0,396  ns/op
ManyParamsBenchmark.concatOptimizedMacros           VeryLong  avgt   14    86,677 ±  0,564  ns/op
ManyParamsBenchmark.concatOptimizedMacros   VeryLongSizeMiss  avgt   14    87,015 ±  0,373  ns/op
ManyParamsBenchmark.fInterpolator                       Tiny  avgt   14  1004,154 ±  6,475  ns/op
ManyParamsBenchmark.fInterpolator                  VeryShort  avgt   14  1002,479 ±  6,124  ns/op
ManyParamsBenchmark.fInterpolator                      Short  avgt   14  1048,015 ±  7,441  ns/op
ManyParamsBenchmark.fInterpolator                     Medium  avgt   14  1056,781 ± 23,221  ns/op
ManyParamsBenchmark.fInterpolator                       Long  avgt   14  1079,823 ± 11,940  ns/op
ManyParamsBenchmark.fInterpolator                   VeryLong  avgt   14  1195,573 ± 13,512  ns/op
ManyParamsBenchmark.fInterpolator           VeryLongSizeMiss  avgt   14  1162,485 ± 15,526  ns/op
ManyParamsBenchmark.javaConcat                          Tiny  avgt   14    17,292 ±  0,060  ns/op
ManyParamsBenchmark.javaConcat                     VeryShort  avgt   14    24,064 ±  0,117  ns/op
ManyParamsBenchmark.javaConcat                         Short  avgt   14    25,748 ±  0,258  ns/op
ManyParamsBenchmark.javaConcat                        Medium  avgt   14    29,193 ±  0,048  ns/op
ManyParamsBenchmark.javaConcat                          Long  avgt   14    34,660 ±  0,188  ns/op
ManyParamsBenchmark.javaConcat                      VeryLong  avgt   14    84,772 ±  0,232  ns/op
ManyParamsBenchmark.javaConcat              VeryLongSizeMiss  avgt   14    84,980 ±  0,325  ns/op
ManyParamsBenchmark.messageFormat                       Tiny  avgt   14   940,132 ± 19,528  ns/op
ManyParamsBenchmark.messageFormat                  VeryShort  avgt   14   973,627 ±  4,728  ns/op
ManyParamsBenchmark.messageFormat                      Short  avgt   14  1018,391 ±  3,631  ns/op
ManyParamsBenchmark.messageFormat                     Medium  avgt   14  1031,609 ±  8,285  ns/op
ManyParamsBenchmark.messageFormat                       Long  avgt   14  1047,061 ±  5,679  ns/op
ManyParamsBenchmark.messageFormat                   VeryLong  avgt   14  1175,242 ± 15,434  ns/op
ManyParamsBenchmark.messageFormat           VeryLongSizeMiss  avgt   14  1212,831 ±  6,510  ns/op
ManyParamsBenchmark.rawInterpolator                     Tiny  avgt   14    41,025 ±  0,363  ns/op
ManyParamsBenchmark.rawInterpolator                VeryShort  avgt   14    61,162 ±  0,189  ns/op
ManyParamsBenchmark.rawInterpolator                    Short  avgt   14    65,569 ±  0,226  ns/op
ManyParamsBenchmark.rawInterpolator                   Medium  avgt   14    70,700 ±  0,343  ns/op
ManyParamsBenchmark.rawInterpolator                     Long  avgt   14   101,502 ±  1,015  ns/op
ManyParamsBenchmark.rawInterpolator                 VeryLong  avgt   14   238,331 ±  1,600  ns/op
ManyParamsBenchmark.rawInterpolator         VeryLongSizeMiss  avgt   14   235,112 ±  1,624  ns/op
ManyParamsBenchmark.sInterpolator                       Tiny  avgt   14    40,720 ±  0,260  ns/op
ManyParamsBenchmark.sInterpolator                  VeryShort  avgt   14    60,964 ±  0,599  ns/op
ManyParamsBenchmark.sInterpolator                      Short  avgt   14    64,232 ±  1,322  ns/op
ManyParamsBenchmark.sInterpolator                     Medium  avgt   14    72,877 ±  2,680  ns/op
ManyParamsBenchmark.sInterpolator                       Long  avgt   14   102,055 ±  0,631  ns/op
ManyParamsBenchmark.sInterpolator                   VeryLong  avgt   14   238,018 ±  1,846  ns/op
ManyParamsBenchmark.sInterpolator           VeryLongSizeMiss  avgt   14   235,000 ±  1,038  ns/op
ManyParamsBenchmark.scalaConcat                         Tiny  avgt   14    41,487 ±  1,136  ns/op
ManyParamsBenchmark.scalaConcat                    VeryShort  avgt   14    60,718 ±  0,208  ns/op
ManyParamsBenchmark.scalaConcat                        Short  avgt   14    64,608 ±  1,193  ns/op
ManyParamsBenchmark.scalaConcat                       Medium  avgt   14    70,812 ±  0,338  ns/op
ManyParamsBenchmark.scalaConcat                         Long  avgt   14   108,616 ±  7,093  ns/op
ManyParamsBenchmark.scalaConcat                     VeryLong  avgt   14   237,716 ±  1,908  ns/op
ManyParamsBenchmark.scalaConcat             VeryLongSizeMiss  avgt   14   234,654 ±  1,607  ns/op
ManyParamsBenchmark.sfiInterpolator                     Tiny  avgt   14    23,547 ±  0,274  ns/op
ManyParamsBenchmark.sfiInterpolator                VeryShort  avgt   14    23,325 ±  0,088  ns/op
ManyParamsBenchmark.sfiInterpolator                    Short  avgt   14    26,992 ±  0,139  ns/op
ManyParamsBenchmark.sfiInterpolator                   Medium  avgt   14    30,272 ±  0,157  ns/op
ManyParamsBenchmark.sfiInterpolator                     Long  avgt   14    35,376 ±  0,138  ns/op
ManyParamsBenchmark.sfiInterpolator                 VeryLong  avgt   14    83,272 ±  0,633  ns/op
ManyParamsBenchmark.sfiInterpolator         VeryLongSizeMiss  avgt   14    83,422 ±  0,465  ns/op
ManyParamsBenchmark.slf4j                               Tiny  avgt   14   120,265 ±  1,366  ns/op
ManyParamsBenchmark.slf4j                          VeryShort  avgt   14   126,729 ±  1,811  ns/op
ManyParamsBenchmark.slf4j                              Short  avgt   14   125,700 ±  6,642  ns/op
ManyParamsBenchmark.slf4j                             Medium  avgt   14   159,378 ±  1,165  ns/op
ManyParamsBenchmark.slf4j                               Long  avgt   14   187,602 ±  2,012  ns/op
ManyParamsBenchmark.slf4j                           VeryLong  avgt   14   316,386 ±  1,972  ns/op
ManyParamsBenchmark.slf4j                   VeryLongSizeMiss  avgt   14   320,170 ±  1,403  ns/op
ManyParamsBenchmark.stringFormat                        Tiny  avgt   14   961,039 ± 19,659  ns/op
ManyParamsBenchmark.stringFormat                   VeryShort  avgt   14   993,954 ±  3,132  ns/op
ManyParamsBenchmark.stringFormat                       Short  avgt   14  1002,493 ±  3,482  ns/op
ManyParamsBenchmark.stringFormat                      Medium  avgt   14  1033,929 ±  5,462  ns/op
ManyParamsBenchmark.stringFormat                        Long  avgt   14  1085,293 ±  8,077  ns/op
ManyParamsBenchmark.stringFormat                    VeryLong  avgt   14  1179,857 ± 15,022  ns/op
ManyParamsBenchmark.stringFormat            VeryLongSizeMiss  avgt   14  1161,620 ± 24,209  ns/op
NewStringBenchmark.baseline                              N/A  avgt   14     2,156 ±  0,006  ns/op
NewStringBenchmark.fastSb                                N/A  avgt   14    81,360 ±  0,364  ns/op
NewStringBenchmark.newString                             N/A  avgt   14    76,939 ±  0,368  ns/op
NewStringBenchmark.sbToString                            N/A  avgt   14    78,689 ±  0,712  ns/op
StringBuilderBenchmark.javaStringBuilder                 N/A  avgt   14     6,512 ±  0,024  ns/op
StringBuilderBenchmark.javaStringBuilder2                N/A  avgt   14    82,473 ±  0,394  ns/op
StringBuilderBenchmark.scalaStringBuilder                N/A  avgt   14    17,970 ±  0,097  ns/op
StringBuilderBenchmark.scalaStringBuilder2               N/A  avgt   14   222,248 ±  1,798  ns/op

Benchmark result is saved to jmh-result.json
